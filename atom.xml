<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LuKing</title>
  
  
  <link href="https://xulujin.gitee.io/blog/atom.xml" rel="self"/>
  
  <link href="https://xulujin.gitee.io/blog/"/>
  <updated>2022-06-16T04:55:46.473Z</updated>
  <id>https://xulujin.gitee.io/blog/</id>
  
  <author>
    <name>LuKing-Xun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>将node-sass换成dart-sass</title>
    <link href="https://xulujin.gitee.io/blog/2022/06/16/%E5%B0%86node-sass%E6%8D%A2%E6%88%90dart-sass/"/>
    <id>https://xulujin.gitee.io/blog/2022/06/16/%E5%B0%86node-sass%E6%8D%A2%E6%88%90dart-sass/</id>
    <published>2022-06-16T04:55:29.000Z</published>
    <updated>2022-06-16T04:55:46.473Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述：node-sass在-node-v16版本-报错兼容性差（将node-sass换成dart-sass）"><a href="#问题描述：node-sass在-node-v16版本-报错兼容性差（将node-sass换成dart-sass）" class="headerlink" title="问题描述：node-sass在 node-v16版本 报错兼容性差（将node-sass换成dart-sass）"></a>问题描述：node-sass在 node-v16版本 报错兼容性差（将node-sass换成dart-sass）</h4><p>问题起因：因为sass官方在nide-v14版本以后使用dart-sass代替了node-sass,node-sass要依靠电脑底层C++语言进行编译，兼容性较差，sass官方便使用了dart-sass以虚拟的sass形式最后编译成css文件，这样不仅兼容性好且性能高</p><h4 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h4><ol><li><h5 id="将nodejs版本换到16以上"><a href="#将nodejs版本换到16以上" class="headerlink" title="将nodejs版本换到16以上"></a>将nodejs版本换到16以上</h5></li><li><h5 id="卸载node-sass-sass-loader-sass-npm-uninstall-node-sass-sass-loader-sass"><a href="#卸载node-sass-sass-loader-sass-npm-uninstall-node-sass-sass-loader-sass" class="headerlink" title="卸载node-sass sass-loader sass  (npm uninstall node-sass sass-loader sass)"></a>卸载node-sass sass-loader sass  (npm uninstall node-sass sass-loader sass)</h5></li><li><h5 id="再安装新的-sass-loader-sass-npm-install-sass-loader-sass-D"><a href="#再安装新的-sass-loader-sass-npm-install-sass-loader-sass-D" class="headerlink" title="再安装新的 sass-loader sass (npm install sass-loader sass -D)"></a>再安装新的 sass-loader sass (npm install sass-loader sass -D)</h5></li><li><h5 id="更新vue-config-js文件"><a href="#更新vue-config-js文件" class="headerlink" title="更新vue.config.js文件"></a>更新vue.config.js文件</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      sass: &#123;</span><br><span class="line">        implementation: <span class="built_in">require</span>(<span class="string">&#x27;sass&#x27;</span>), <span class="comment">// This line must in sass option</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="重启项目，如果node-gyp报错就全局安装更新-npm-install-node-gyp-g"><a href="#重启项目，如果node-gyp报错就全局安装更新-npm-install-node-gyp-g" class="headerlink" title="重启项目，如果node-gyp报错就全局安装更新 (npm install  node-gyp -g)"></a>重启项目，如果node-gyp报错就全局安装更新 (npm install  node-gyp -g)</h5></li><li><h5 id="如果报Rule-can-only-have-one-resource-source-provided-resource-and-test-include-exclude-in，就安装-npm-install-webpack-4-0-0-–save-dev"><a href="#如果报Rule-can-only-have-one-resource-source-provided-resource-and-test-include-exclude-in，就安装-npm-install-webpack-4-0-0-–save-dev" class="headerlink" title="如果报Rule can only have one resource source (provided resource and test + include + exclude) in，就安装 (npm install webpack@^4.0.0 –save-dev)"></a>如果报Rule can only have one resource source (provided resource and test + include + exclude) in，就安装 (npm install webpack@^4.0.0 –save-dev)</h5></li><li><h5 id="如果-vue-config中的-sass-prependData报错"><a href="#如果-vue-config中的-sass-prependData报错" class="headerlink" title="如果 vue.config中的 sass prependData报错"></a>如果 vue.config中的 sass prependData报错</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax <span class="built_in">Error</span>: ValidationError: Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.</span><br><span class="line"> - options has an unknown property <span class="string">&#x27;prependData&#x27;</span>. These properties are valid:</span><br><span class="line">   object &#123; implementation?, api?, sassOptions?, additionalData?, sourceMap?, webpackImporter?, warnRuleAsWarning? &#125;</span><br></pre></td></tr></table></figure><p>就修改</p><p>原来的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      sass: &#123;</span><br><span class="line">        prependData: <span class="string">&#x27;@import &quot;@/scss/settings.scss&quot;;&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>修改后的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      sass: &#123;</span><br><span class="line">        additionalData: <span class="string">&#x27;@import &quot;@/scss/settings.scss&quot;;&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="如果-sass-deep-报错-就把-deep-换成-v-deep"><a href="#如果-sass-deep-报错-就把-deep-换成-v-deep" class="headerlink" title="如果 sass /deep/ 报错 就把 /deep/ 换成 ::v-deep"></a>如果 sass /deep/ 报错 就把 /deep/ 换成 ::v-deep</h5></li><li><h5 id="不出意外就可以正常运行了"><a href="#不出意外就可以正常运行了" class="headerlink" title="不出意外就可以正常运行了"></a>不出意外就可以正常运行了</h5></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;问题描述：node-sass在-node-v16版本-报错兼容性差（将node-sass换成dart-sass）&quot;&gt;&lt;a href=&quot;#问题描述：node-sass在-node-v16版本-报错兼容性差（将node-sass换成dart-sass）&quot; class=</summary>
      
    
    
    
    
    <category term="前端" scheme="https://xulujin.gitee.io/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>自己对软件开发及交付流程理解</title>
    <link href="https://xulujin.gitee.io/blog/2022/05/25/%E8%87%AA%E5%B7%B1%E5%AF%B9%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%8F%8A%E4%BA%A4%E4%BB%98%E6%B5%81%E7%A8%8B%E7%90%86%E8%A7%A3/"/>
    <id>https://xulujin.gitee.io/blog/2022/05/25/%E8%87%AA%E5%B7%B1%E5%AF%B9%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%8F%8A%E4%BA%A4%E4%BB%98%E6%B5%81%E7%A8%8B%E7%90%86%E8%A7%A3/</id>
    <published>2022-05-25T06:31:29.000Z</published>
    <updated>2022-05-26T01:34:27.731Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-销售及售前阶段"><a href="#1-销售及售前阶段" class="headerlink" title="1.销售及售前阶段"></a>1.销售及售前阶段</h4><ol><li><h5 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h5></li><li><h5 id="标书"><a href="#标书" class="headerlink" title="标书"></a>标书</h5></li><li><h5 id="SOW"><a href="#SOW" class="headerlink" title="SOW"></a>SOW</h5></li></ol><h4 id="2-项目准备阶段"><a href="#2-项目准备阶段" class="headerlink" title="2.项目准备阶段"></a>2.项目准备阶段</h4><ol><li><h5 id="客户初始需求"><a href="#客户初始需求" class="headerlink" title="客户初始需求"></a>客户初始需求</h5></li><li><h5 id="项目启动会"><a href="#项目启动会" class="headerlink" title="项目启动会"></a>项目启动会</h5></li><li><h5 id="项目规范"><a href="#项目规范" class="headerlink" title="项目规范"></a>项目规范</h5><ol><li><h6 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h6></li><li><h6 id="文档规范"><a href="#文档规范" class="headerlink" title="文档规范"></a>文档规范</h6></li></ol></li></ol><h4 id="3-蓝图设计阶段"><a href="#3-蓝图设计阶段" class="headerlink" title="3.蓝图设计阶段"></a>3.蓝图设计阶段</h4><ol><li><h5 id="需求概要设计"><a href="#需求概要设计" class="headerlink" title="需求概要设计"></a>需求概要设计</h5></li><li><h5 id="蓝图汇报"><a href="#蓝图汇报" class="headerlink" title="蓝图汇报"></a>蓝图汇报</h5></li><li><h5 id="UI-UE原型"><a href="#UI-UE原型" class="headerlink" title="UI/UE原型"></a>UI/UE原型</h5></li><li><h5 id="指标文档"><a href="#指标文档" class="headerlink" title="指标文档"></a>指标文档</h5></li><li><h5 id="技术设计说明书"><a href="#技术设计说明书" class="headerlink" title="技术设计说明书"></a>技术设计说明书</h5></li></ol><h4 id="4-项目实施阶段"><a href="#4-项目实施阶段" class="headerlink" title="4.项目实施阶段"></a>4.项目实施阶段</h4><ol><li><h5 id="数据模型设计"><a href="#数据模型设计" class="headerlink" title="数据模型设计"></a>数据模型设计</h5></li><li><h5 id="数据流设计"><a href="#数据流设计" class="headerlink" title="数据流设计"></a>数据流设计</h5></li><li><h5 id="集成接口设计及数据字典"><a href="#集成接口设计及数据字典" class="headerlink" title="集成接口设计及数据字典"></a>集成接口设计及数据字典</h5></li><li><h5 id="UI-UE原型（报表表样）"><a href="#UI-UE原型（报表表样）" class="headerlink" title="UI/UE原型（报表表样）"></a>UI/UE原型（报表表样）</h5></li></ol><h4 id="5-项目测试阶段"><a href="#5-项目测试阶段" class="headerlink" title="5.项目测试阶段"></a>5.项目测试阶段</h4><ol><li><h5 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h5></li><li><h5 id="UAT测试报告"><a href="#UAT测试报告" class="headerlink" title="UAT测试报告"></a>UAT测试报告</h5></li></ol><h4 id="6-上线及试运行阶段"><a href="#6-上线及试运行阶段" class="headerlink" title="6.上线及试运行阶段"></a>6.上线及试运行阶段</h4><ol><li><h5 id="用户培训手册"><a href="#用户培训手册" class="headerlink" title="用户培训手册"></a>用户培训手册</h5></li><li><h5 id="权限配置手册"><a href="#权限配置手册" class="headerlink" title="权限配置手册"></a>权限配置手册</h5></li><li><h5 id="上线文档"><a href="#上线文档" class="headerlink" title="上线文档"></a>上线文档</h5></li></ol><h4 id="7-项目验收阶段"><a href="#7-项目验收阶段" class="headerlink" title="7.项目验收阶段"></a>7.项目验收阶段</h4><ol><li><h5 id="验收文档"><a href="#验收文档" class="headerlink" title="验收文档"></a>验收文档</h5></li></ol><h4 id="8-项目运维阶段"><a href="#8-项目运维阶段" class="headerlink" title="8.项目运维阶段"></a>8.项目运维阶段</h4><ol><li><h5 id="运维及运营报告"><a href="#运维及运营报告" class="headerlink" title="运维及运营报告"></a>运维及运营报告</h5></li><li><h5 id="运维手册"><a href="#运维手册" class="headerlink" title="运维手册"></a>运维手册</h5></li><li><h5 id="问题整理及销项表"><a href="#问题整理及销项表" class="headerlink" title="问题整理及销项表"></a>问题整理及销项表</h5></li></ol><h4 id="9-项目后评估及结项阶段"><a href="#9-项目后评估及结项阶段" class="headerlink" title="9.项目后评估及结项阶段"></a>9.项目后评估及结项阶段</h4><ol><li><h5 id="项目总结报告"><a href="#项目总结报告" class="headerlink" title="项目总结报告"></a>项目总结报告</h5></li><li><h5 id="项目案例效益分析"><a href="#项目案例效益分析" class="headerlink" title="项目案例效益分析"></a>项目案例效益分析</h5></li><li><h5 id="客户投诉总结"><a href="#客户投诉总结" class="headerlink" title="客户投诉总结"></a>客户投诉总结</h5></li></ol><h4 id="10-项目上线阶段"><a href="#10-项目上线阶段" class="headerlink" title="10.项目上线阶段"></a>10.项目上线阶段</h4><ol><li><h5 id="上线部署文档"><a href="#上线部署文档" class="headerlink" title="上线部署文档"></a>上线部署文档</h5></li><li><h5 id="上线报告"><a href="#上线报告" class="headerlink" title="上线报告"></a>上线报告</h5></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-销售及售前阶段&quot;&gt;&lt;a href=&quot;#1-销售及售前阶段&quot; class=&quot;headerlink&quot; title=&quot;1.销售及售前阶段&quot;&gt;&lt;/a&gt;1.销售及售前阶段&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;h5 id=&quot;方案&quot;&gt;&lt;a href=&quot;#方案&quot; class=&quot;hea</summary>
      
    
    
    
    
    <category term="软实力" scheme="https://xulujin.gitee.io/blog/tags/%E8%BD%AF%E5%AE%9E%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>web前端关键词</title>
    <link href="https://xulujin.gitee.io/blog/2022/05/16/web%E5%89%8D%E7%AB%AF%E5%B8%B8%E8%A7%81%E5%85%B3%E9%94%AE%E8%AF%8D/"/>
    <id>https://xulujin.gitee.io/blog/2022/05/16/web%E5%89%8D%E7%AB%AF%E5%B8%B8%E8%A7%81%E5%85%B3%E9%94%AE%E8%AF%8D/</id>
    <published>2022-05-16T03:21:19.000Z</published>
    <updated>2022-05-16T03:22:02.897Z</updated>
    
    <content type="html"><![CDATA[<ol><li><strong>PV</strong> （<strong>P</strong>age <strong>V</strong>iew）页面浏览量</li><li><strong>FED</strong>（<strong>F</strong>ront-<strong>E</strong>nd <strong>D</strong>evelopment）前端开发</li><li><strong>F2E</strong>（<strong>F</strong>ront-<strong>E</strong>nd <strong>E</strong>ngineer）前端工程师</li><li><strong>WWW</strong>（<strong>W</strong>orld <strong>W</strong>ide <strong>W</strong>eb）万维网</li><li><strong>W3C</strong>（<strong>W</strong>orld <strong>W</strong>ide <strong>W</strong>eb <strong>C</strong>onsortium）万维网联盟</li><li><strong>BBS</strong>（<strong>B</strong>ulletin <strong>B</strong>oard <strong>S</strong>ystem）电子公告板</li><li><strong>URL</strong>（<strong>U</strong>niform <strong>R</strong>esource <strong>L</strong>ocator）统一资源定位符</li><li><strong>URN</strong>（<strong>U</strong>niform <strong>R</strong>esource <strong>N</strong>ame）统一资源标名称</li><li><strong>URI</strong>（<strong>U</strong>niform <strong>R</strong>esource <strong>I</strong>dentifier）统一资源标识符</li><li><strong>NPM</strong>（<strong>N</strong>ode <strong>P</strong>ackage <strong>M</strong>anager）Node.js包管理器</li><li><strong>XML</strong>（E<strong>x</strong>tensible <strong>M</strong>arkup <strong>L</strong>anguage）可扩展标记语言</li><li><strong>DTD</strong>（<strong>D</strong>ocument <strong>T</strong>ype <strong>D</strong>efinition）文档类型定义</li><li><strong>XHR</strong>（<strong>X</strong>ML<strong>H</strong>ttp<strong>R</strong>equest）XMLHTTP的请求API函数</li><li><strong>CSS</strong>（<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets）层叠样式表</li><li><strong>BFC</strong>（<strong>B</strong>lock <strong>F</strong>ormatting <strong>C</strong>ontext）块格式化上下文</li><li><strong>RWD</strong>（<strong>R</strong>esponsive <strong>W</strong>eb <strong>D</strong>esign）响应式Web设计</li><li><strong>SVG</strong>（<strong>S</strong>calable <strong>V</strong>ector <strong>G</strong>raphics）可缩放的矢量图形</li><li>DOM（Document Object Model）文档对象模型</li><li>BOM（Browser Object Model）浏览器对象模型</li><li>NaN （Not a Number）非数字</li><li>MDN（Mozilla Developer Network）Mozilla开发者网络</li><li>MVC（Model View Controller）模型-视图-控制器</li><li>MVP（Model-View-Presenter）模型-视图-呈现</li><li>FAQ（Frequently Asked Questions）常见问题解答</li><li>IIS（Internet Information Service）互联网信息服务</li><li>ASP（Active Server Pages）动态服务器页面</li><li>PHP（Hypertext Preprocessor）超文本预处理器</li><li>JSP（Java Server Pages）Java服务器页面</li><li>JVM（Java Virtual Machine）Java虚拟机</li><li>RPC（Remote Procedure Call）远程过程调用</li><li>CDN（Content Dilivery Network）内容分发网络</li><li>NTP（Network Time Protocol）网络时间协议</li><li>GMT（Greenwich Mean Time）格林尼治标准时间 世界时</li><li>UTC（Coordinated Universal Time）协调世界时</li><li>PST（Pacific Standard Time）太平洋标准时间</li><li>XSS（Cross Site Scripting）跨站脚本攻击</li><li>XUL（XML User Interface Language）可扩展标记语言用户界面语言</li><li>SPA（Single Page Web Application）单页应用程序</li><li>RIA（Rich Internet Application）富互联网程序</li><li>WAI（Web Accessibility Initiative）网页易读性倡议</li><li>UMD（Universal Module Definition）通用模块定义</li><li>CMD（Common Module Definition）公共模块定义</li><li>AMD（Asynchronous Module Definition）异步模块定义</li><li>UED（User Experience Design）用户体验设计</li><li>RSS（Really Simple Syndication）简易信息聚合</li><li>CMS（Content Management System）内容管理系统</li><li>DBA（Database Administrator）数据库管理员</li><li>SEO（Search Engine Optimization）搜索引擎优化</li><li>CLI（Command-Line Interface）命令行界面</li><li>GUI（Graphical User Interface）图形用户界面</li><li>HCI（Human Computer Interaction）人机交互</li><li>API（Application Programming Interface） 应用程序编程接口</li><li>HSL（Hue Saturation Lightness） 色相、饱和度、亮度</li><li>RGB（Red Green Blue）红色 绿色 蓝色</li><li>DNS（Domain Name System）域名系统</li><li>RFC（Request For Comments）协议或标准的请求注解</li><li>DES（Data Encryption Standard）数据加密标准</li><li>DPI（Dots Per Inch）每英寸点数</li><li>GIF（Graphics Interchange Format）图形交换格式</li><li>ISO（International Organization for Standardization）国际标准化组织</li><li>ITU（International Telecommunication Union）国际电信联盟</li><li>HSLA（Hue Saturation Alpha） 色相、饱和度、亮度 透明度</li><li>RGBA（Red Green Blue Alpha） 红色 绿色 蓝色 透明度</li><li>SGML（Standard Generalized Markup Language）标准通用标记语言</li><li>HTML（HyperText Markup Language）超文本标记语言</li><li>SMIL（Synchronized Multimedia Integration Language）同步多媒体集成语言</li><li>HTTP（HyperText Transfer Protocol）超文本传输协议</li><li>SMTP（Simple Mail Transfer Protocol）简单邮件传输协议</li><li>SOAP（Simple Object Access Protocol）简单对象访问协议</li><li>IEEE（Institute of Electrical and Electronics Engineers）电气和电子工程师协会</li><li>IETF（Internet Engineering Task Force）因特网工程任务组</li><li>JPEG（Joint Photographic Experts Group）联合图像专家组</li><li>MPEG（Moving Picture Expert Group）运动图像专家组</li><li>MMVF（Multi-Media Video File）多媒体视频文件</li><li>MIDI（Musical Instrument Digital Interface）乐器数字接口</li><li>EDIF（Electronic Design Interchange Format）电子设计交换格式</li><li>JSON（JavaScript Object Notation) JS 对象简谱</li><li>BSON（Binary JSON) 二进制JSON</li><li>ODBC（Open Database Connectivity) 开放数据库连接</li><li>JDBC（Java DataBase Connectivity)   java数据库连接</li><li>AJAX（Asynchronous Javascript And XML）异步 JavaScript 和 XML</li><li>MVVM（Model-View-ViewModel）模型-视图-视图模型</li><li>WCAG（Web Content Accessibility Guidelines）web内容无障碍指南</li><li>CSRF（Cross Site Request Forgery）跨站请求伪造</li><li>CORS（Cross-Origin Resource Sharing）跨域资源共享</li><li>HREF（Hypertext Reference）超文本引用</li><li>MIME (Multipurpose Internet Mail Extensions) 多用途互联网邮件扩展</li><li>REPL（Read-Eval-Print Loop）读取-求值-输出的循环 交互式解释器</li><li>ANSI（American National Standards Institute）美国国家标准学会</li><li>CNPM（Chinese Node Package Manager）淘宝镜像Node.js包管理器</li><li>JSONP（JSON with Padding）填充式JSON或参数式JSON</li><li>HTTPS（Hyper Text Transfer Protocol over SecureSocket Layer）超文本传输安全协议</li><li>ASCII（American Standard Code for Information Interchange）美国信息交换标准代码</li><li>UTF-8（8-bit Unicode Transformation Format）8位Unicode转换格式</li><li>WHATWG（Web Hypertext Application Technology Working Group）网页超文本应用技术工作小组</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;PV&lt;/strong&gt; （&lt;strong&gt;P&lt;/strong&gt;age &lt;strong&gt;V&lt;/strong&gt;iew）页面浏览量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FED&lt;/strong&gt;（&lt;strong&gt;F&lt;/strong&gt;ront-&lt;strong</summary>
      
    
    
    
    
    <category term="前端" scheme="https://xulujin.gitee.io/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>腾讯互娱面试题</title>
    <link href="https://xulujin.gitee.io/blog/2022/01/19/%E5%AD%97%E8%8A%82%E9%A3%9E%E4%B9%A6%E9%9D%A2%E8%AF%95%E9%A2%98_20220119/"/>
    <id>https://xulujin.gitee.io/blog/2022/01/19/%E5%AD%97%E8%8A%82%E9%A3%9E%E4%B9%A6%E9%9D%A2%E8%AF%95%E9%A2%98_20220119/</id>
    <published>2022-01-19T02:10:23.000Z</published>
    <updated>2022-01-19T02:16:37.411Z</updated>
    
    <content type="html"><![CDATA[<ol><li>通过至少3种实现方式，使用数组原生方法（禁止使用 for 循环），对长度为10的数组移除第三个元素，eg. [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] =&gt; [10, 9, 7, 6, 5, 4, 3, 2, 1] </li><li>写一段正则表达式，用于判断以下字符串是否满足一下要求(区号+8位数字，或区号+特殊号码10010/110) 1. 020-12345678 =&gt; true（满足区号 + 8位数字) 2. 020-123456789 =&gt; false （不满足区号 + 8位数字) 3. 020-1234567 =&gt; false （不满足区号 + 8位数字) 4. 020-10010 =&gt; true （满足区号 + 特殊号码) 5. 020-110 =&gt; true （满足区号 + 特殊号码) </li><li>实现一个函数，能够将诸如 [5, [[4, 3], 2, 1]] 的数组当作 (5 - ((4 - 3) - 2 - 1)) 进行分组的减法运算，并返回结果。（不能使用 eval） </li><li>要在 10 秒后调用 checkState 函数，下列哪些写法是正确的[多选]<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">setTimeout(checkState, 10)<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">setTimeout(checkState(), 10)<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">window.setTimeout(checkState, 10000)<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">window.setTimeout(checkState(), 10000) </li><li>关于 JavaScript 的数据类型，以下哪些说法是正确的[多选]<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">通过 const 声明的数组，不能向其中添加元素<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">数组的 filter、map、sort、reverse 方法都会产生新数组<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">任意的对象都能转换为 JSON 字符串<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">Number 可以表达任意大小的数字<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">Map 的 key 可以为任意类型 </li><li>以下哪些场景是数组类型[多选]<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">document.getElementsByClassName(“a”)<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">Object.keys({a: 1})<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">new Map([[‘a’, 1]]).keys()<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">function fun() { console.log(arguments) } =&gt; arguments 是否为数组<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">function fun(…args) { console.log(args) } =&gt; args 是否为数组 </li><li>关于浏览器的限制，以下哪些说法是正确的[多选]<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">可以通过 JS 创建 TCP 套接字（Socket）<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">可以通过 JS 读取到用户希望上传的文件内容<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">可以通过 JS 获取用户的操作系统、浏览器版本、屏幕分辨率等信息<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">可以通过 JS 获取用户的收藏夹、历史记录等信息 </li><li>关于浏览器的存储机制，以下说法哪些是正确的？[多选]<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">服务端可以通过 HTTP 请求头获取用户浏览器中 Cookie 的内容<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">js 可以获取服务端设置的所有 Cookie 内容<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">localStorage 可以存储 Blob 数据<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">Cookie 只能存储字符串数据，因此存储对象之前需要进行序列化<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">除了 Cookie，其他的存储机制都没有跨域限制<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">仅访问页面时服务端可以设置 cookie，ajax 请求不可以 </li><li>关于网页样式和布局，以下说法哪些是正确的？[多选]<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">CSS 中，vw 和 vh 其中的 v 是 viewport，指的是用户的屏幕尺寸<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">选择器不仅可以选择 HTML 元素，还可以选择 SVG 中的图形<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">关于样式优先级：!import &gt; 内联样式 &gt; CSS 样式 &gt; 浏览器默认样式<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">HTML 元素顺序的优先级比 z-index 的优先级更高 </li><li>以下关于图片格式的说明哪些是正确的？[多选]<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">JPG 格式的图片支持有损压缩<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">PNG 格式的图片包含图层信息，可以展示矢量图<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">SVG 格式的图片，既可以通过 img 标签使用，也可以直接复制到 HTML 中使用<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-empty.f18a0456.svg" alt="img">GIF 格式的图片支持透明背景 </li><li>浏览器的打开网页操作，可能会发生如下哪些事情，且对应描述是正确的？[多选]<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">向 HTTP 默认端口 8080 建立 TCP 连接<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">协商缓存不会向服务器发起请求<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">强缓存不会向服务器发起请求<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">通过 TCP 协议进行 DNS 解析，获取域名的 A 记录<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">向本地硬盘写入 Cookie 和网页缓存等数据<img src="https://sf3-cn.feishucdn.com/obj/static/ee/kariya-miniapp/static/img/checkbox-checked.181df0f8.svg" alt="img">调用 GPU 能力对页面进行 2D 绘图 </li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;通过至少3种实现方式，使用数组原生方法（禁止使用 for 循环），对长度为10的数组移除第三个元素，eg. [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] =&amp;gt; [10, 9, 7, 6, 5, 4, 3, 2, 1] &lt;/li&gt;
&lt;li&gt;</summary>
      
    
    
    
    
    <category term="面试题" scheme="https://xulujin.gitee.io/blog/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://xulujin.gitee.io/blog/2021/11/12/js%E5%B0%86%E5%A4%9A%E4%B8%AA%E5%9B%BE%E7%89%87%E6%8B%BC%E5%9C%A8%E4%B8%80%E8%B5%B7%E4%B8%8B%E8%BD%BD%E6%88%90%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87/"/>
    <id>https://xulujin.gitee.io/blog/2021/11/12/js%E5%B0%86%E5%A4%9A%E4%B8%AA%E5%9B%BE%E7%89%87%E6%8B%BC%E5%9C%A8%E4%B8%80%E8%B5%B7%E4%B8%8B%E8%BD%BD%E6%88%90%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87/</id>
    <published>2021-11-12T04:28:18.079Z</published>
    <updated>2021-08-26T10:02:05.781Z</updated>
    
    <content type="html"><![CDATA[<p>实现思路：</p><p>​    1.准备下载 html2-canvas 插件（基于canvas drawImgae() 方法截图）</p><p>​    2.调用 html2-canvas 方法截取多个图片，再将多个图片生成在一个div中</p><p>​    3.再调用html2-canvas 方法截取当前div</p><p>​    4.调用 window.atob 将 base64 下载下来</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;实现思路：&lt;/p&gt;
&lt;p&gt;​    1.准备下载 html2-canvas 插件（基于canvas drawImgae() 方法截图）&lt;/p&gt;
&lt;p&gt;​    2.调用 html2-canvas 方法截取多个图片，再将多个图片生成在一个div中&lt;/p&gt;
&lt;p&gt;​    3.</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>修养养成篇</title>
    <link href="https://xulujin.gitee.io/blog/2021/08/14/%E4%BF%AE%E5%85%BB%E5%85%BB%E6%88%90%E7%AF%87_v1.0/"/>
    <id>https://xulujin.gitee.io/blog/2021/08/14/%E4%BF%AE%E5%85%BB%E5%85%BB%E6%88%90%E7%AF%87_v1.0/</id>
    <published>2021-08-14T11:12:19.000Z</published>
    <updated>2021-08-14T11:12:41.330Z</updated>
    
    <content type="html"><![CDATA[<p>1.能尊重别人的爱豆，不嘲讽别人的喜好，总是会让人感到舒服。</p><p>2.大学食堂，有很多人都会在拨开门帘后用手扶一下，免得门帘打到后面的人。</p><p>3.合照修图不仅修自己的，也修闺蜜的。</p><p><img src="https://qqpublic.qpic.cn/qq_public/0/0-643082996-B2839772A31E66486A1946A5777CCFBD/900" alt="img"></p><p>4.戴着耳机不要跟人说话，说话的时候拿掉耳机。</p><p>5.借了别人的充电宝，记得把充电宝充满电后及时归还。</p><p>6.在与人交往相处时，从不强调个人特殊的一面，也不有意表现自己的优越感。</p><p><img src="https://qqpublic.qpic.cn/qq_public/0/0-835121349-CD44B1D2D003280B26E63A8DE365297B/900" alt="img"></p><p>7.不要没经过同意就随便看别人手机。</p><p>8.有了男朋友以后就不和其他人暧昧。</p><p>9.去外面聚餐，夹菜时用碗去接，防止汤汁滴到桌上。</p><p><img src="https://qqpublic.qpic.cn/qq_public/0/0-547997436-B670CFECB6A3DF55DE3FB1B558A82609/0?tp=webp" alt="img"></p><p>10.关系再铁的异性，一旦对方有了女朋友，自己也应该远离。</p><p>11.不要试着用自己的秘密去交换一个朋友。</p><p>12.打破别人的喜悦这是一件很没礼貌的事情。</p><p><img src="https://qqpublic.qpic.cn/qq_public/0/0-4013714554-DC98548FF38E4800B641FAA2328F6D4B/0?tp=webp" alt="img"></p><p>13.对于不喜欢的人会及时拒绝，不会故意吊着对方。</p><p>14.在酒桌上与别人碰杯，自己的杯子定要低于对方的，特别是对方是长辈或领导。</p><p>15.在有长辈的饭桌上，会等长辈先动筷子，自己才会动手。</p><p><img src="https://qqpublic.qpic.cn/qq_public/0/0-2257984638-85ECF5499978B932367F5C1E6D26A355/0?tp=webp" alt="img"></p><p>16.吃饭的时候不会发出很大的声音，不会用筷子敲碗并敲出很大的声音。</p><p>17.别人给你发消息一定要回，就算不想聊也可以告诉他，哪怕是用表情或者标点来委婉的表达，不回消息不是高冷，是没教养。</p><p>18.在公共场合戴耳机不开功放是对大家的尊重。</p><p><img src="https://qqpublic.qpic.cn/qq_public/0/0-3376953949-D8010465B8C30FC0F5EAD62E0B2FB1F8/0?tp=webp" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.能尊重别人的爱豆，不嘲讽别人的喜好，总是会让人感到舒服。&lt;/p&gt;
&lt;p&gt;2.大学食堂，有很多人都会在拨开门帘后用手扶一下，免得门帘打到后面的人。&lt;/p&gt;
&lt;p&gt;3.合照修图不仅修自己的，也修闺蜜的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qqpublic.q</summary>
      
    
    
    
    
    <category term="其他" scheme="https://xulujin.gitee.io/blog/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>在安装javaSE碰到的问题</title>
    <link href="https://xulujin.gitee.io/blog/2021/06/23/%E5%9C%A8%E5%AE%89%E8%A3%85javaSE%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://xulujin.gitee.io/blog/2021/06/23/%E5%9C%A8%E5%AE%89%E8%A3%85javaSE%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-06-23T02:44:20.000Z</published>
    <updated>2021-06-23T02:46:04.514Z</updated>
    
    <content type="html"><![CDATA[<p>在运行java程序时出现 Error: could not open c:\program Files\Java\jre6\lib\amd64\jvm.cfg’</p><p>1.场景：</p><p>JDK原先装在C盘的，现在移动到了D盘，并在环境变量修改了%JAVA_HOME%的新路径，但是CMD中输入java后依然报错。</p><p>Error: could not open `C:\Program Files\Java\jre1.8.0_131\lib\amd64\jvm.cfg’</p><p><img src="https://images2018.cnblogs.com/blog/759894/201803/759894-20180329121210399-169896505.png" alt="img"></p><p>解决办法：</p><p>在环境变量PATH中把下面这段挪到PATH最前面即可。记得要关闭再打开CMD后再输入java检查。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</span><br></pre></td></tr></table></figure><p>2.实在不行的话：卸载掉java后，如果还出现这种情况就到C:\windows\system32下的： java.exe javaw.exe javaws.exe 三个文件就OK了。 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在运行java程序时出现 Error: could not open c:\program Files\Java\jre6\lib\amd64\jvm.cfg’&lt;/p&gt;
&lt;p&gt;1.场景：&lt;/p&gt;
&lt;p&gt;JDK原先装在C盘的，现在移动到了D盘，并在环境变量修改了%JAVA_H</summary>
      
    
    
    
    
    <category term="java" scheme="https://xulujin.gitee.io/blog/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>为什么vue中的data用return返回</title>
    <link href="https://xulujin.gitee.io/blog/2021/05/20/%E4%B8%BA%E4%BB%80%E4%B9%88%20vue%20%E4%B8%AD%E7%9A%84%20data%20%E4%BD%BF%E7%94%A8%20return%20%E8%BF%94%E5%9B%9E/"/>
    <id>https://xulujin.gitee.io/blog/2021/05/20/%E4%B8%BA%E4%BB%80%E4%B9%88%20vue%20%E4%B8%AD%E7%9A%84%20data%20%E4%BD%BF%E7%94%A8%20return%20%E8%BF%94%E5%9B%9E/</id>
    <published>2021-05-20T06:20:07.000Z</published>
    <updated>2021-05-20T06:20:11.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么vue中的data用return返回"><a href="#为什么vue中的data用return返回" class="headerlink" title="为什么vue中的data用return返回"></a>为什么vue中的data用return返回</h1><p>1、为什么在项目中data需要使用return返回数据呢？</p><p>不使用return包裹的数据会在项目的全局可见，会造成变量污染；使用return包裹后数据中变量只在当前组件中生效，不会影响其他组件。</p><p>当一个组件被定义， data 必须声明为返回一个初始数据对象的函数，因为组件可能被用来创建多个实例。如果 data 仍然是一个纯粹的对象，则所有的实例将共享引用同一个数据对象！通过提供 data 函数，每次创建一个新实例后，我们能够调用 data 函数，从而返回初始数据的一个全新副本数据对象。</p><p>2.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Vue实例中data属性是如下方式展示的：</span></span><br><span class="line"><span class="keyword">let</span> app = newVue(&#123;</span><br><span class="line"></span><br><span class="line">    el: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    data: &#123; <span class="attr">msg</span>: <span class="string">&#x27;&#x27;</span> &#125;,</span><br><span class="line">    methods: &#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 使用组件化的项目中是如下方式展示的:</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            showLogin:<span class="literal">true</span>,</span><br><span class="line">            msg:<span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>————————————————<br>版权声明：本文为CSDN博主「阿扎姆王子」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_45156610/article/details/97154367">https://blog.csdn.net/weixin_45156610/article/details/97154367</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;为什么vue中的data用return返回&quot;&gt;&lt;a href=&quot;#为什么vue中的data用return返回&quot; class=&quot;headerlink&quot; title=&quot;为什么vue中的data用return返回&quot;&gt;&lt;/a&gt;为什么vue中的data用return返回&lt;/</summary>
      
    
    
    
    
    <category term="vue" scheme="https://xulujin.gitee.io/blog/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>关于后台需要返回怎样的数据结构更加友好</title>
    <link href="https://xulujin.gitee.io/blog/2021/04/28/%E5%90%8E%E5%8F%B0%E7%BB%99%E5%89%8D%E7%AB%AF%E8%BF%94%E5%9B%9E%E7%9A%84%E5%8F%8B%E5%A5%BD%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>https://xulujin.gitee.io/blog/2021/04/28/%E5%90%8E%E5%8F%B0%E7%BB%99%E5%89%8D%E7%AB%AF%E8%BF%94%E5%9B%9E%E7%9A%84%E5%8F%8B%E5%A5%BD%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2021-04-28T07:26:29.000Z</published>
    <updated>2021-05-12T11:27:11.505Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-表格"><a href="#1-表格" class="headerlink" title="1.表格:"></a>1.表格:</h4><blockquote><p>1.普通的表格：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="comment">// 返回的 tbody 中的数据以数组的形式,如下：</span></span><br><span class="line">&gt;<span class="keyword">let</span> tableData = [</span><br><span class="line">   &#123;</span><br><span class="line">       field1:<span class="string">&#x27;50&#x27;</span>，</span><br><span class="line">       field2:<span class="string">&#x27;40&#x27;</span>,</span><br><span class="line">   &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">       field1:<span class="string">&#x27;30&#x27;</span>，</span><br><span class="line">       field2:<span class="string">&#x27;30&#x27;</span>,</span><br><span class="line">   &#125;</span><br><span class="line">&gt;];</span><br><span class="line"></span><br><span class="line">&gt;<span class="comment">// 需要返回 thead 表头也是以数组的形式,如下:</span></span><br><span class="line">&gt;<span class="number">1.</span><span class="keyword">let</span> headerList1 = [<span class="string">&#x27;表头1&#x27;</span>,<span class="string">&#x27;表头2&#x27;</span>];</span><br><span class="line">&gt;<span class="number">2.</span><span class="keyword">let</span> headerList2 = [</span><br><span class="line">   &#123;</span><br><span class="line">       label:<span class="string">&#x27;表头1&#x27;</span>， <span class="comment">// 表头显示的文字</span></span><br><span class="line">       prop:<span class="string">&#x27;field1&#x27;</span>, <span class="comment">// 对应 tableData 的字段名</span></span><br><span class="line">   &#125;，</span><br><span class="line">   &#123;</span><br><span class="line">       label:<span class="string">&#x27;表头2&#x27;</span>， </span><br><span class="line">       prop:<span class="string">&#x27;field2&#x27;</span>, </span><br><span class="line">   &#125;</span><br><span class="line">   ... <span class="comment">// (推荐使用这种格式)， 以此类推，如果有 tableData 中字段名有多少种，headerList 的 length 就为多长</span></span><br><span class="line">&gt;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;<span class="comment">// 后台返回例子：</span></span><br><span class="line">&gt;&#123;</span><br><span class="line">   code: <span class="number">200</span>,</span><br><span class="line">   data:[</span><br><span class="line">     &#123;</span><br><span class="line">           field1:<span class="string">&#x27;50&#x27;</span>，</span><br><span class="line">           field2:<span class="string">&#x27;40&#x27;</span>,</span><br><span class="line">   &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">           field1:<span class="string">&#x27;30&#x27;</span>，</span><br><span class="line">           field2:<span class="string">&#x27;30&#x27;</span>,</span><br><span class="line">   &#125; </span><br><span class="line">   ]</span><br><span class="line">&gt;&#125;</span><br><span class="line">&gt;或</span><br><span class="line">&gt;&#123;</span><br><span class="line">   code: <span class="number">200</span>,</span><br><span class="line">       data:&#123;</span><br><span class="line">           header:[<span class="string">&#x27;表头1&#x27;</span>,<span class="string">&#x27;表头2&#x27;</span>],</span><br><span class="line">           list:[</span><br><span class="line">               &#123;</span><br><span class="line">                   field1:<span class="string">&#x27;50&#x27;</span>，</span><br><span class="line">                   field2:<span class="string">&#x27;40&#x27;</span>,</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                   field1:<span class="string">&#x27;30&#x27;</span>，</span><br><span class="line">                   field2:<span class="string">&#x27;30&#x27;</span>,</span><br><span class="line">               &#125; </span><br><span class="line">   ]</span><br><span class="line">       &#125;</span><br><span class="line">&gt;&#125;</span><br><span class="line">&gt;或</span><br><span class="line">&gt;&#123;</span><br><span class="line">   code: <span class="number">200</span>,</span><br><span class="line">       data:&#123;</span><br><span class="line">           header:[&#123;</span><br><span class="line">                   label:<span class="string">&#x27;表头1&#x27;</span>， <span class="comment">// 表头显示的文字</span></span><br><span class="line">                   prop:<span class="string">&#x27;field1&#x27;</span>, <span class="comment">// 对应 tableData 的字段名</span></span><br><span class="line">               &#125;，</span><br><span class="line">               &#123;</span><br><span class="line">                   label:<span class="string">&#x27;表头2&#x27;</span>， </span><br><span class="line">                   prop:<span class="string">&#x27;field2&#x27;</span>, </span><br><span class="line">               &#125;],</span><br><span class="line">           list:[</span><br><span class="line">               &#123;</span><br><span class="line">                   field1:<span class="string">&#x27;50&#x27;</span>，</span><br><span class="line">                   field2:<span class="string">&#x27;40&#x27;</span>,</span><br><span class="line">               &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                   field1:<span class="string">&#x27;30&#x27;</span>，</span><br><span class="line">                   field2:<span class="string">&#x27;30&#x27;</span>,</span><br><span class="line">               &#125; </span><br><span class="line">   ]</span><br><span class="line">       &#125;</span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure></blockquote><h4 id="2-菜单结构"><a href="#2-菜单结构" class="headerlink" title="2.菜单结构"></a>2.菜单结构</h4><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&gt;树型结构示例:</span><br><span class="line">&gt;<span class="keyword">let</span> menuList =[</span><br><span class="line">   &#123;</span><br><span class="line">       menuName:<span class="string">&#x27;集团&#x27;</span>,</span><br><span class="line">       menuCode:<span class="string">&#x27;集团&#x27;</span>,</span><br><span class="line">       children:[</span><br><span class="line">           &#123;</span><br><span class="line">               menuName:<span class="string">&#x27;宏观分析类&#x27;</span>,</span><br><span class="line">               menuCode:<span class="string">&#x27;hgfxl&#x27;</span>,</span><br><span class="line">               children:[</span><br><span class="line">                   &#123;</span><br><span class="line">               menuName:<span class="string">&#x27;定期研究报告&#x27;</span>,</span><br><span class="line">               menuCode:<span class="string">&#x27;dqyjbg&#x27;</span>,</span><br><span class="line">                       children:[</span><br><span class="line">                           &#123;</span><br><span class="line">                               menuName:<span class="string">&#x27;定期研究报告&#x27;</span>,</span><br><span class="line">                               menuCode:<span class="string">&#x27;dqyjbg&#x27;</span></span><br><span class="line">                           &#125;</span><br><span class="line">                       ]</span><br><span class="line">                   &#125;,</span><br><span class="line">                   &#123;</span><br><span class="line">                       menuName:<span class="string">&#x27;定期研究报告&#x27;</span>,</span><br><span class="line">               menuCode:<span class="string">&#x27;dqyjbg&#x27;</span>,</span><br><span class="line">                   &#125;</span><br><span class="line">               ]</span><br><span class="line">           &#125;,</span><br><span class="line">       ]</span><br><span class="line">   &#125;</span><br><span class="line">&gt;]</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-表格&quot;&gt;&lt;a href=&quot;#1-表格&quot; class=&quot;headerlink&quot; title=&quot;1.表格:&quot;&gt;&lt;/a&gt;1.表格:&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;1.普通的表格：&lt;/p&gt;
&lt;figure class=&quot;highlight javascrip</summary>
      
    
    
    
    
    <category term="js" scheme="https://xulujin.gitee.io/blog/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>vue刷新组件</title>
    <link href="https://xulujin.gitee.io/blog/2021/04/19/%E5%88%B7%E6%96%B0%E7%BB%84%E4%BB%B6/"/>
    <id>https://xulujin.gitee.io/blog/2021/04/19/%E5%88%B7%E6%96%B0%E7%BB%84%E4%BB%B6/</id>
    <published>2021-04-19T09:56:20.000Z</published>
    <updated>2021-04-19T10:00:31.125Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue刷新组件"><a href="#vue刷新组件" class="headerlink" title="vue刷新组件"></a>vue刷新组件</h1><p>第一种方法：利用v-if控制router-view，在根组件APP.vue中实现一个刷新方法</p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;router-view v-<span class="keyword">if</span>=<span class="string">&quot;isRouterAlive&quot;</span>/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export <span class="keyword">default</span> &#123;</span><br><span class="line"> data () &#123;</span><br><span class="line">   <span class="keyword">return</span> &#123;</span><br><span class="line">     isRouterAlive: <span class="keyword">true</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br><span class="line"> methods: &#123;</span><br><span class="line">   reload () &#123;</span><br><span class="line">     <span class="keyword">this</span>.isRouterAlive = <span class="keyword">false</span></span><br><span class="line">     <span class="keyword">this</span>.$nextTick(() =&gt; (<span class="keyword">this</span>.isRouterAlive = <span class="keyword">true</span>))</span><br><span class="line">   &#125;   </span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">然后其它任何想刷新自己的路由页面，都可以这样：</span><br><span class="line"><span class="keyword">this</span>.reload()</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p> 这种方法可以实现任意组件的刷新。</p><p>第二种方法：路由替换</p><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// replace another route (with different component or a dead route) at first</span></span><br><span class="line"><span class="comment">// 先进入一个空路由</span></span><br><span class="line">vm.$router.replace(&#123;</span><br><span class="line">  path: <span class="string">&#x27;/_empty&#x27;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//then replace your route (with same component)</span></span><br><span class="line">vm.$router.replace(&#123;</span><br><span class="line">  path: <span class="string">&#x27;/student/report&#x27;</span>,</span><br><span class="line">  query: &#123;</span><br><span class="line">    <span class="string">&#x27;paperId&#x27;</span>:paperId</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></p><p>转载自：<a href="https://blog.csdn.net/weixin_40054326/article/details/79384433">https://blog.csdn.net/weixin_40054326/article/details/79384433</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vue刷新组件&quot;&gt;&lt;a href=&quot;#vue刷新组件&quot; class=&quot;headerlink&quot; title=&quot;vue刷新组件&quot;&gt;&lt;/a&gt;vue刷新组件&lt;/h1&gt;&lt;p&gt;第一种方法：利用v-if控制router-view，在根组件APP.vue中实现一个刷新方法&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="vue" scheme="https://xulujin.gitee.io/blog/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>2021年规划</title>
    <link href="https://xulujin.gitee.io/blog/2021/02/20/2021%E5%B9%B4%E5%B7%A5%E4%BD%9C%E8%A7%84%E5%88%92/"/>
    <id>https://xulujin.gitee.io/blog/2021/02/20/2021%E5%B9%B4%E5%B7%A5%E4%BD%9C%E8%A7%84%E5%88%92/</id>
    <published>2021-02-20T06:24:20.000Z</published>
    <updated>2021-02-20T06:53:38.533Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><h3 id="1-坚持做40个俯卧撑或俯卧撑（每天）"><a href="#1-坚持做40个俯卧撑或俯卧撑（每天）" class="headerlink" title="1.坚持做40个俯卧撑或俯卧撑（每天）"></a>1.坚持做40个俯卧撑或俯卧撑（每天）</h3><h3 id="2-偶尔跑步"><a href="#2-偶尔跑步" class="headerlink" title="2.偶尔跑步"></a>2.偶尔跑步</h3><h3 id="3-坚持吃早餐"><a href="#3-坚持吃早餐" class="headerlink" title="3.坚持吃早餐"></a>3.坚持吃早餐</h3><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><h3 id="1-解决2020年未解决的问题。"><a href="#1-解决2020年未解决的问题。" class="headerlink" title="1.解决2020年未解决的问题。"></a>1.解决2020年未解决的问题。</h3><blockquote><p>1.nginx配置。</p><p>2.ant-design-vue table在列全是负数排序错乱原因</p></blockquote><h3 id="2-学习前端架构经验-（技术选型，组件封装，工具函数优化，具体逻辑代码优化）。"><a href="#2-学习前端架构经验-（技术选型，组件封装，工具函数优化，具体逻辑代码优化）。" class="headerlink" title="2.学习前端架构经验 （技术选型，组件封装，工具函数优化，具体逻辑代码优化）。"></a>2.学习前端架构经验 （技术选型，组件封装，工具函数优化，具体逻辑代码优化）。</h3><h3 id="3-学习产品化思想来开发-。"><a href="#3-学习产品化思想来开发-。" class="headerlink" title="3.学习产品化思想来开发 。"></a>3.学习产品化思想来开发 。</h3><h3 id="4-学习后台工作流程，提高工作效率-。"><a href="#4-学习后台工作流程，提高工作效率-。" class="headerlink" title="4.学习后台工作流程，提高工作效率 。"></a>4.学习后台工作流程，提高工作效率 。</h3><h3 id="5-完成中级前端的进阶。"><a href="#5-完成中级前端的进阶。" class="headerlink" title="5.完成中级前端的进阶。"></a>5.完成中级前端的进阶。</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;生活&quot;&gt;&lt;a href=&quot;#生活&quot; class=&quot;headerlink&quot; title=&quot;生活&quot;&gt;&lt;/a&gt;生活&lt;/h2&gt;&lt;h3 id=&quot;1-坚持做40个俯卧撑或俯卧撑（每天）&quot;&gt;&lt;a href=&quot;#1-坚持做40个俯卧撑或俯卧撑（每天）&quot; class=&quot;header</summary>
      
    
    
    
    
    <category term="智扬信达" scheme="https://xulujin.gitee.io/blog/tags/%E6%99%BA%E6%89%AC%E4%BF%A1%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>程序员面试五个陷阱</title>
    <link href="https://xulujin.gitee.io/blog/2021/02/20/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E4%BA%94%E5%A4%A7%E9%99%B7%E9%98%B1/"/>
    <id>https://xulujin.gitee.io/blog/2021/02/20/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E4%BA%94%E5%A4%A7%E9%99%B7%E9%98%B1/</id>
    <published>2021-02-20T06:24:20.000Z</published>
    <updated>2021-02-20T06:56:13.393Z</updated>
    
    <content type="html"><![CDATA[<h1 id="程序员面试时一定要注意这五个陷阱！你记住了吗"><a href="#程序员面试时一定要注意这五个陷阱！你记住了吗" class="headerlink" title="程序员面试时一定要注意这五个陷阱！你记住了吗?"></a>程序员面试时一定要注意这五个陷阱！你记住了吗?</h1><p>程序员面试时一定要注意这五个陷阱！你记住了吗?</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很多程序员到新公司面试时没有注意到一些小问题，从而导致HR直接将自己pass掉，又或者是沦为了备用的垫底存在，那么这几个导致你被pass的小问题你是否注意过？下面请听我一一道来，希望能对大家有所启发。</p><h2 id="一、你为什么离开上家公司？"><a href="#一、你为什么离开上家公司？" class="headerlink" title="一、你为什么离开上家公司？"></a>一、你为什么离开上家公司？</h2><p>进行社招面试时，这个问题几乎是必问的。其实这个问题主要是想试探一下求职者的核心诉求，并借此预估一下求职者将来在本公司的稳定性。常见的答案也就几种，无非就是对薪酬不满意、工作氛围不够、环境不好、干的不愉快。</p><p>但是有部分初次跳槽的求职者回答是：“在原来的公司学不到技术。”</p><p>一听到这个，那估计你其他项目准备的在充分也没用了，因为在HR面前也算是报废了，基本没戏再唱，即使你后面说的天花乱坠，HR也会觉得是敷衍。</p><p>因为在HR的经验来看，这句话基本出自一个工作时间不满两年的小白说出来的，很大概率会将你定义为一个不会学习不会感恩又特别爱抱怨的人。所以宁愿回答的普通一点，也不要天真的去追逐技术上的高端。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d8aa54fe034e498a83804b125567a590~tplv-k3u1fbpfcp-watermark.image" alt="img"></p><h2 id="二、说说你最大的缺点"><a href="#二、说说你最大的缺点" class="headerlink" title="二、说说你最大的缺点"></a>二、说说你最大的缺点</h2><p>这个问题HR一般问到的几率也很大，通常不希望听到直接回答的缺点是什么等，如果求职者说自己小心眼、爱忌妒人、非常懒、脾气大、工作效率低，企业肯定不会录用你。但绝对不要自作聪明地回答“我最大的缺点是过于追求完美”，有的人以为这样回答会显得自己比较出色。</p><p>事实上，在HR眼里，此时的你已经沦为小丑，给他的感觉只剩下做作。HR一般喜欢求职者<strong>从自己的优点说起，中间加一些小缺点，最后再把问题转回到优点上，突出优点的部分，企业喜欢聪明的求职者。</strong></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/47835b7225e8445d822728463ccf677c~tplv-k3u1fbpfcp-watermark.image" alt="img"></p><h2 id="三、在五年时间内，你的职业规划是什么？"><a href="#三、在五年时间内，你的职业规划是什么？" class="headerlink" title="三、在五年时间内，你的职业规划是什么？"></a>三、在五年时间内，你的职业规划是什么？</h2><p>说实话，这应该是大部分求职者最不想被问到的一个问题，但几乎每个人都会被问到。说得难听一点，如果是一个新人，他目前最需要的是一份工作而已，对于企业什么的都还是一知半解，自己都还是懵逼状态的人又谈何规划。但你又不能说不知道，这样或许会导致你失去一些机会。</p><p>当然，说出其他一些你感兴趣的职位也是可以的，比如产品销售部经理，生产部经理等一些与你的专业有相关背景的工作。</p><p>如果是老人，职业规划过于简单，难道前任公司满足不了？很容易衍生到究竟是能力不行还是公司不行的问题上。不过一些聪明的老人还是总结出了一些最普通的回答：<strong>“我准备在技术领域有所作为”或“我希望能按照公司的管理思路发展”。</strong></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/985e49467bd6428a9313276b9ce0d8e1~tplv-k3u1fbpfcp-watermark.image" alt="img"></p><h2 id="四、你还有什么问题要问？"><a href="#四、你还有什么问题要问？" class="headerlink" title="四、你还有什么问题要问？"></a>四、你还有什么问题要问？</h2><p>这个问题看上去可有可无，但其实也很关键，HR不喜欢说“没有问题”的人，因为想看看求职者的性格与创新能力。但是，他们也不喜欢求职者问一些关于个人福利之类的问题。</p><p>最简单的回答就是问一下HR，<strong>公司对新入公司的员工有没有什么培训项目</strong>，自己能否参加。或者问下公司的晋升机制是怎么样的？一方面表现自己的忠诚度，一方面也表现下自己对<strong>学习的热情跟上进心。</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b301ea5d4fe543918ee5c872b214d57e~tplv-k3u1fbpfcp-watermark.image" alt="img"></p><h2 id="五、说说你对行业、技术趋势的看法？"><a href="#五、说说你对行业、技术趋势的看法？" class="headerlink" title="五、说说你对行业、技术趋势的看法？"></a>五、说说你对行业、技术趋势的看法？</h2><p>HR一般对这个问题很感兴趣，除非你是应届新人，否则只有有备而来的求职者才能过关。可以事先在网站上查找对你所申请的行业部门的信息，只有深入了解才能产生独特的见解。</p><p>HR认为最聪明的求职者是对所面试的公司预先了解很多，包括公司各个部门，发展情况，在面试回答问题的时候可以提到所了解的情况，企业欢迎进入企业的人是“知己”，而不是“盲人”。</p><p><strong>程序员最核心的竞争力：学习力</strong></p><p>互联网时代的技术来得快，去得更快。就像Flash这样曾经雄霸天下多年的技术，都有被人人唾弃的一天。如果没有足够强的学习能力，就无法跟上变化，被淘汰只是迟早的事。想想看，你苦心钻研多年引以为傲的技术，一夜之间就没有用武之地了，难免会有一种「身体被掏空」的感觉。</p><p>学习力强的程序员敢大胆地体验尝试新技术，他们的技术栈始终在保持不断地更新。他们能快速把握事物的本质，并判断出它能用来做什么，不能用来做什么。他们拥抱技术升级和革命，因为他们学习并掌握新技术的速度比其他人更快，所以他们永远不用担心失业。</p><h2 id="后语"><a href="#后语" class="headerlink" title="后语"></a>后语</h2><p>如果觉得本文对你有所帮助，欢迎点赞+关注，你的支持就是我持续输出好内容的动力哦！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;程序员面试时一定要注意这五个陷阱！你记住了吗&quot;&gt;&lt;a href=&quot;#程序员面试时一定要注意这五个陷阱！你记住了吗&quot; class=&quot;headerlink&quot; title=&quot;程序员面试时一定要注意这五个陷阱！你记住了吗?&quot;&gt;&lt;/a&gt;程序员面试时一定要注意这五个陷阱！你记</summary>
      
    
    
    
    
    <category term="面试" scheme="https://xulujin.gitee.io/blog/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>echarts多Y轴显示负数零刻度线对齐</title>
    <link href="https://xulujin.gitee.io/blog/2020/09/18/echarts%E5%A4%9AY%E8%BD%B4%E6%98%BE%E7%A4%BA%E8%B4%9F%E6%95%B0%E9%9B%B6%E5%88%BB%E5%BA%A6%E7%BA%BF%E5%AF%B9%E9%BD%90/"/>
    <id>https://xulujin.gitee.io/blog/2020/09/18/echarts%E5%A4%9AY%E8%BD%B4%E6%98%BE%E7%A4%BA%E8%B4%9F%E6%95%B0%E9%9B%B6%E5%88%BB%E5%BA%A6%E7%BA%BF%E5%AF%B9%E9%BD%90/</id>
    <published>2020-09-18T03:23:11.000Z</published>
    <updated>2020-09-18T03:27:30.839Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">option = &#123;</span><br><span class="line">    xAxis: &#123;</span><br><span class="line">        type: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        data: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    yAxis: [&#123;</span><br><span class="line">        type: <span class="string">&#x27;value&#x27;</span>,</span><br><span class="line">        max: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(value.max) &gt; <span class="built_in">Math</span>.abs(value.min))&#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">Math</span>.abs(value.max)*<span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">Math</span>.abs(value.min)*<span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        min: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(value.max) &gt; <span class="built_in">Math</span>.abs(value.min))&#123;</span><br><span class="line">                <span class="keyword">return</span> (-<span class="built_in">Math</span>.abs(value.max) * <span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> (-<span class="built_in">Math</span>.abs(value.min) * <span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        type: <span class="string">&#x27;value&#x27;</span>,</span><br><span class="line">        max: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(value.max) &gt; <span class="built_in">Math</span>.abs(value.min))&#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">Math</span>.abs(value.max)*<span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">Math</span>.abs(value.min)*<span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        min: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(value.max) &gt; <span class="built_in">Math</span>.abs(value.min))&#123;</span><br><span class="line">                <span class="keyword">return</span> (-<span class="built_in">Math</span>.abs(value.max) * <span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> (-<span class="built_in">Math</span>.abs(value.min) * <span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    series: [&#123;</span><br><span class="line">        data: [<span class="number">120</span>, <span class="number">200</span>, -<span class="number">150</span>, <span class="number">80</span>, <span class="number">70</span>, -<span class="number">110</span>, <span class="number">130</span>],</span><br><span class="line">        type: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">        yAxisIndex: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        data: [<span class="number">120</span>, <span class="number">200</span>, <span class="number">150</span>, <span class="number">80</span>, -<span class="number">70</span>, <span class="number">110</span>, -<span class="number">130</span>],</span><br><span class="line">        type: <span class="string">&#x27;bar&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关键代码</span></span><br><span class="line">max: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(value.max) &gt; <span class="built_in">Math</span>.abs(value.min))&#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">Math</span>.abs(value.max)*<span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">Math</span>.abs(value.min)*<span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        min: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(value.max) &gt; <span class="built_in">Math</span>.abs(value.min))&#123;</span><br><span class="line">                <span class="keyword">return</span> (-<span class="built_in">Math</span>.abs(value.max) * <span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> (-<span class="built_in">Math</span>.abs(value.min) * <span class="number">1.2</span>).toFixed(<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>具体解决方案可参考</p><p><a href="https://blog.csdn.net/qq_32580307/article/details/100011440">博客</a></p><p><a href="https://echarts.apache.org/zh/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts">echarts官方文档</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span </summary>
      
    
    
    
    
    <category term="冷知识" scheme="https://xulujin.gitee.io/blog/tags/%E5%86%B7%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>chrome80版本以后，SAMESITE COOKIE验证跨站问题</title>
    <link href="https://xulujin.gitee.io/blog/2020/08/21/CHROME%2080%E7%89%88%E6%9C%AC%E4%BB%A5%E5%90%8E%EF%BC%8CSAMESITE%20COOKIE%E9%AA%8C%E8%AF%81%E8%B7%A8%E7%AB%99%E9%97%AE%E9%A2%98/"/>
    <id>https://xulujin.gitee.io/blog/2020/08/21/CHROME%2080%E7%89%88%E6%9C%AC%E4%BB%A5%E5%90%8E%EF%BC%8CSAMESITE%20COOKIE%E9%AA%8C%E8%AF%81%E8%B7%A8%E7%AB%99%E9%97%AE%E9%A2%98/</id>
    <published>2020-08-21T08:33:10.000Z</published>
    <updated>2020-08-26T01:14:47.567Z</updated>
    
    <content type="html"><![CDATA[<p>这几天忙着写文档，一直看的线上环境的系统。今天启动本地测试环境，发现登录不成功。排查问题发现登录成功后，之后的请求没有携带cookie。然后我就仔细看了一下登录请求的参数。</p><p>发现在chorme header头的cookie里有一个黄色的小叹号，发现问题了。</p><p>this set-cookie didn’t specify a “SameSite” attribute，然后变成默认Lax。(不能复制，懒得打英文了)</p><p>然后我搜索了一下Samesite定义，有三个值，None, Lax,Strict.这个参数是防止跨站攻击用的，因为测试环境，所以最方便就是跨站调试了。</p><p>然后我搜了一下flask源码，发现有这个设置，配置了一下发现不管用。然后放弃了。</p><p>找了一下怎么关闭chrome的这个选项，虽然别的网站可能有一点风险。自己调试的时候会方便点。</p><blockquote><p>chrome://flags/#same-site-by-default-cookies</p></blockquote><blockquote><p>chrome://flags/#cookies-without-same-site-must-be-secure</p></blockquote><p>这两项设置为Disabled，并重启浏览器</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这几天忙着写文档，一直看的线上环境的系统。今天启动本地测试环境，发现登录不成功。排查问题发现登录成功后，之后的请求没有携带cookie。然后我就仔细看了一下登录请求的参数。&lt;/p&gt;
&lt;p&gt;发现在chorme header头的cookie里有一个黄色的小叹号，发现问题了。&lt;/</summary>
      
    
    
    
    
    <category term="冷知识" scheme="https://xulujin.gitee.io/blog/tags/%E5%86%B7%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>js的Object.assign</title>
    <link href="https://xulujin.gitee.io/blog/2020/08/21/js%E7%9A%84Object.assign/"/>
    <id>https://xulujin.gitee.io/blog/2020/08/21/js%E7%9A%84Object.assign/</id>
    <published>2020-08-21T08:33:10.000Z</published>
    <updated>2021-04-15T07:26:47.397Z</updated>
    
    <content type="html"><![CDATA[<p>现需要在js中，使用一个新的对象的值覆盖旧有对象，js中有一个方法：<br>Object.assign(target,…sources)<br>当target和sources对象中有相同的key时，在target对象中的值会被后面source对象的值覆盖。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o1 = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o2 = &#123; <span class="attr">b</span>: <span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o3 = &#123; <span class="attr">c</span>: <span class="number">3</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = <span class="built_in">Object</span>.assign(o1, o2, o3);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj); <span class="comment">// &#123; a: 1, b: 2, c: 3 &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(o1);  <span class="comment">// &#123; a: 1, b: 2, c: 3 &#125;, target对象自身会被修改</span></span><br></pre></td></tr></table></figure><p>如果想要避免o1被改变，需要这样写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="built_in">Object</span>.assign(&#123;&#125;,o1,o2,o3);<span class="comment">//给一个空对象作为target，这样改变的是空对象</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);<span class="comment">// &#123; a: 1, b: 2, c: 3 &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(o1); <span class="comment">// &#123; a: 1&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现需要在js中，使用一个新的对象的值覆盖旧有对象，js中有一个方法：&lt;br&gt;Object.assign(target,…sources)&lt;br&gt;当target和sources对象中有相同的key时，在target对象中的值会被后面source对象的值覆盖。&lt;/p&gt;
&lt;fig</summary>
      
    
    
    
    
    <category term="前端面试题" scheme="https://xulujin.gitee.io/blog/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>前端知识结构</title>
    <link href="https://xulujin.gitee.io/blog/2020/08/21/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%BB%93%E6%9E%84/"/>
    <id>https://xulujin.gitee.io/blog/2020/08/21/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%BB%93%E6%9E%84/</id>
    <published>2020-08-21T08:33:10.000Z</published>
    <updated>2020-08-21T08:33:34.217Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端知识结构"><a href="#前端知识结构" class="headerlink" title="前端知识结构"></a>前端知识结构</h1><h2 id="项目起源"><a href="#项目起源" class="headerlink" title="项目起源"></a>项目起源</h2><p>还记得@jayli 的这幅前端知识结构图么。</p><p><a href="https://camo.githubusercontent.com/6797bdc1a11d35369611c817bbd5dae9a162d775/68747470733a2f2f7261772e6769746875622e636f6d2f4a61636b736f6e5469616e2f666b732f6d61737465722f666967757265732f666b732e6a7067"><img src="https://camo.githubusercontent.com/6797bdc1a11d35369611c817bbd5dae9a162d775/68747470733a2f2f7261772e6769746875622e636f6d2f4a61636b736f6e5469616e2f666b732f6d61737465722f666967757265732f666b732e6a7067" alt="前端知识结构"></a></p><p>图片的形式具有诸多的不便。缺失源图的我们，无法为此图贡献些什么，随着时间的迁移，或许有些技术点会发生改变，所以有了这个GitHub项目。我们可以通过协作的方式来共同维护这个项目。Git的历史记录也可以见证前端行业的一些变迁。</p><p><a href="http://html5ify.com/fks/fks_chart/">可视化效果</a></p><h2 id="前端开发知识结构"><a href="#前端开发知识结构" class="headerlink" title="前端开发知识结构"></a>前端开发知识结构</h2><ul><li>前端工程师<ul><li>浏览器<ul><li>IE6/<a href="http://www.microsoft.com/en-us/download/internet-explorer-7-details.aspx">7</a>/<a href="http://windows.microsoft.com/en-US/internet-explorer/downloads/ie-8">8</a>/<a href="http://windows.microsoft.com/en-US/internet-explorer/downloads/ie-9/worldwide-languages">9</a>/<a href="http://windows.microsoft.com/en-US/internet-explorer/ie-10-worldwide-languages">10</a>/<a href="http://windows.microsoft.com/en-US/internet-explorer/ie-11-worldwide-languages">11</a> (Trident) / <a href="https://www.microsoft.com/en-us/windows/microsoft-edge">Edge</a> (EdgeHTML)</li><li><a href="http://www.mozilla.org/en-US/">Firefox</a> (Gecko)</li><li><a href="http://www.google.com/chrome">Chrome</a>/<a href="http://www.chromium.org/">Chromium</a> (Blink)</li><li><a href="http://www.apple.com/safari/">Safari</a> (WebKit)</li><li><a href="http://www.opera.com/">Opera</a> (Blink)</li></ul></li><li>编程语言<ul><li><a href="https://developer.mozilla.org/en-US/docs/JavaScript">JavaScript</a>/<a href="http://nodejs.org/">Node.js</a></li><li><a href="http://coffeescript.org/">CoffeeScript</a></li><li><a href="http://www.typescriptlang.org/">TypeScript</a></li></ul></li><li>切页面<ul><li><a href="http://www.w3.org/html/">HTML</a>/<a href="http://www.w3.org/TR/html5/">HTML5</a></li><li><a href="http://www.w3.org/Style/CSS/">CSS/CSS3</a></li><li><a href="http://sass-lang.com/">Sass</a>/<a href="http://lesscss.org/">LESS</a>/<a href="http://learnboost.github.io/stylus/">Stylus</a>/<a href="https://github.com/postcss/postcss">postCSS</a></li><li><a href="http://www.photoshop.com/products/photoshop">PhotoShop</a>/<a href="http://www.getpaint.net/">Paint.net</a>/<a href="http://www.adobe.com/cn/products/fireworks.html">Fireworks</a>/<a href="http://www.gimp.org/">GIMP</a>/<a href="http://bohemiancoding.com/sketch/">Sketch</a></li></ul></li><li>开发工具<ul><li>编辑器和IDE<ul><li><a href="http://www.vim.org/">VIM</a>/<a href="http://www.sublimetext.com/">Sublime Text2</a></li><li><a href="http://notepad-plus-plus.org/">Notepad++</a>/<a href="http://www.editplus.com/">EditPlus</a></li><li><a href="http://www.jetbrains.com/webstorm/">WebStorm</a></li><li><a href="http://www.gnu.org/software/emacs/">Emacs</a> <a href="http://emacswiki.org/">EmacsWiki</a></li><li><a href="http://brackets.io/">Brackets</a></li><li><a href="https://atom.io/">Atom</a></li><li><a href="http://limetext.org/">Lime Text</a></li><li><a href="http://lighttable.com/">Light Table</a></li><li><a href="https://www.codebox.io/">Codebox</a></li><li><a href="http://macromates.com/">TextMate</a></li><li><a href="http://neovim.org/">Neovim</a></li><li><a href="http://www.activestate.com/komodo-edit">Komodo IDE / Edit</a></li><li><a href="http://www.eclipse.org/">Eclipse</a></li><li><a href="http://www.visualstudio.com/">Visual Studio</a></li><li><a href="https://code.visualstudio.com/">Visual Studio Code</a></li><li><a href="https://netbeans.org/">NetBeans</a></li><li><a href="http://c9.io/">Cloud9 IDE</a></li><li><a href="http://www.dcloud.io/">HBuilder</a></li><li><a href="http://nuclide.io/">Nuclide</a></li></ul></li><li>调试工具<ul><li><a href="http://getfirebug.com/">Firebug</a>/<a href="https://addons.mozilla.org/en-US/firefox/addon/firecookie/">Firecookie</a></li><li><a href="http://developer.yahoo.com/yslow/">YSlow</a></li><li><a href="http://www.microsoft.com/en-us/download/details.aspx?id=18359">IEDeveloperToolbar</a>/<a href="http://www.my-debugbar.com/wiki/IETester/HomePage">IETester</a></li><li><a href="http://www.telerik.com/fiddler">Fiddler</a></li><li><a href="https://developer.chrome.com/devtools">Chrome Dev Tools</a></li><li><a href="http://www.opera.com/dragonfly/">Dragonfly</a></li><li><a href="http://www.debugbar.com/">DebugBar</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Venkman">Venkman</a></li><li><a href="https://www.charlesproxy.com/">Charles</a></li></ul></li><li>版本管理<ul><li><a href="http://git-scm.com/">Git</a>/<a href="http://subversion.apache.org/">SVN</a>/<a href="http://mercurial.selenic.com/">Mercurial</a></li><li><a href="https://github.com/">Github</a>/<a href="https://about.gitlab.com/">GitLab</a>/<a href="https://bitbucket.org/">Bitbucket</a>/<a href="https://gitorious.org/">Gitorious</a>/<a href="http://savannah.gnu.org/">GNU Savannah</a>/<a href="https://launchpad.net/">Launchpad</a>/<a href="http://sourceforge.net/">SourceForge</a>/<a href="http://www.collab.net/products/teamforge">TeamForge</a></li></ul></li></ul></li><li>代码质量<ul><li>Coding style<ul><li><a href="http://www.jslint.com/">JSLint</a>/<a href="http://www.jshint.com/">JSHint</a>/<a href="https://github.com/mdevils/node-jscs">jscs</a>/<a href="https://github.com/eslint/eslint">ESLint</a></li><li><a href="http://csslint.net/">CSSLint</a></li><li><a href="http://validator.w3.org/">Markup Validation Service</a></li><li><a href="https://validator.whatwg.org/">HTML Validators</a></li></ul></li><li>单元测试<ul><li><a href="http://qunitjs.com/">QUnit</a>/<a href="http://jasmine.github.io/">Jasmine</a></li><li><a href="http://mochajs.org/">Mocha</a>/<a href="https://github.com/visionmedia/should.js/">Should</a>/<a href="http://chaijs.com/">Chai</a>/<a href="https://github.com/LearnBoost/expect.js/">Expect</a></li><li><a href="http://unitjs.com/">Unit JS</a></li></ul></li><li>自动化测试<ul><li><a href="http://docs.seleniumhq.org/docs/03_webdriver.jsp">WebDriver</a>/<a href="https://github.com/angular/protractor">Protractor</a>/<a href="https://github.com/karma-runner/karma">Karma Runner</a>/<a href="http://sahi.co.in/">Sahi</a></li><li><a href="http://phantomjs.org/">phantomjs</a></li><li><a href="https://saucelabs.com/">SourceLabs</a>/<a href="http://www.browserstack.com/">BrowserStack</a></li></ul></li></ul></li><li>前端库/框架<ul><li><a href="http://jquery.com/">jQuery</a>/<a href="http://underscorejs.org/">Underscore</a>/<a href="http://mootools.net/">Mootools</a>/<a href="http://www.prototypejs.org/">Prototype.js</a></li><li><a href="http://yuilibrary.com/projects/yui3/">YUI3</a>/<a href="http://dojotoolkit.org/">Dojo</a>/<a href="http://www.sencha.com/products/extjs">ExtJS</a>/<a href="http://docs.kissyui.com/">KISSY</a></li><li><a href="http://backbonejs.org/">Backbone</a>/<a href="http://knockoutjs.com/">KnockoutJS</a>/<a href="http://emberjs.com/">Emberjs</a></li><li>AngularJS<ul><li><a href="https://chrome.google.com/webstore/detail/angularjs-batarang/ighdmehidhipcmcojjgiloacoafjmpfk">Batarang</a></li></ul></li><li><a href="http://getbootstrap.com/">Bootstrap</a></li><li><a href="http://www.semantic-ui.com/">Semantic UI</a></li><li><a href="http://juiceui.com/">Juice UI</a></li><li><a href="http://webatomsjs.neurospeech.com/">Web Atoms</a></li><li><a href="http://docs.polymerchina.org/">Polymer</a></li><li><a href="http://dhtmlx.com/">Dhtmlx</a></li><li><a href="http://qooxdoo.org/">qooxdoo</a></li><li><a href="http://facebook.github.io/react/">React</a></li><li><a href="http://mozbrick.github.io/">Brick</a></li><li><a href="http://cn.vuejs.org/">vue.js</a></li></ul></li><li>前端标准/规范<ul><li>HTTP/1.1: RFCs 7230-7235</li><li><a href="https://http2.github.io/">HTTP/2</a></li><li><a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMAScript3/5</a></li><li><a href="http://www.ecma-international.org/ecma-262/6.0/index.html">ECMAScript6</a></li><li><a href="http://www.w3.org/TR/">W3C: DOM/BOM/XHTML/XML/JSON/JSONP/…</a></li><li><a href="http://wiki.commonjs.org/wiki/Modules/1.0">CommonJS Modules</a>/<a href="https://github.com/amdjs/amdjs-api/wiki/AMD">AMD</a></li><li><a href="http://www.w3.org/html/wg/drafts/html/master/">HTML5</a>/<a href="http://www.w3.org/Style/CSS/specs.en.html">CSS3</a></li><li>Semantic Web<ul><li><a href="http://schema.org/">MicroData</a></li><li><a href="http://www.w3.org/TR/rdfa-core/">RDFa</a></li></ul></li><li>Web Accessibility<ul><li><a href="http://www.w3.org/TR/WAI-WEBCONTENT/">WCAG</a></li><li><a href="http://www.w3.org/TR/role-attribute/">Role Attribute</a></li><li><a href="http://www.w3.org/TR/wai-aria/">WAI-ARIA</a></li></ul></li></ul></li><li>性能<ul><li><a href="http://jsperf.com/">JSPerf</a></li><li><a href="http://developer.yahoo.com/performance/rules.html">YSlow 35 rules</a></li><li><a href="https://developers.google.com/speed/pagespeed/">PageSpeed</a></li><li><a href="http://www.httpwatch.com/">HTTPWatch</a></li><li><a href="http://www.compuware.com/application-performance-management/dynatrace-ajax-download.html">DynaTrace’s Ajax</a></li><li><a href="http://book.douban.com/subject/5362856/">高性能JavaScript</a></li></ul></li><li>SEO</li><li>编程知识储备<ul><li><a href="http://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84">数据结构</a></li><li>OOP/AOP</li><li><a href="http://net.tutsplus.com/tutorials/javascript-ajax/prototypes-in-javascript-what-you-need-to-know/">原型链</a>/作用域链</li><li><a href="http://www.jibbering.com/faq/notes/closures/">闭包</a></li><li><a href="http://zh.wikipedia.org/wiki/%E7%BC%96%E7%A8%8B%E8%8C%83%E5%9E%8B">编程范型</a></li><li><a href="http://addyosmani.com/resources/essentialjsdesignpatterns/book/">设计模式</a></li><li><a href="http://sanshi.me/articles/JavaScript-Garden-CN/html/index.html">Javascript Tips</a></li></ul></li><li>部署流程<ul><li>压缩合并<ul><li><a href="http://developer.yahoo.com/yui/compressor/">YUI Compressor</a></li><li><a href="https://developers.google.com/closure/compiler/">Google Clousure Complier</a></li><li><a href="https://github.com/mishoo/UglifyJS">UglifyJS</a></li><li><a href="https://github.com/GoalSmashers/clean-css">CleanCSS</a></li></ul></li><li>文档输出<ul><li><a href="https://github.com/jsdoc3/jsdoc">JSDoc</a></li><li><a href="https://github.com/visionmedia/dox">Dox</a>/<a href="https://github.com/JacksonTian/doxmate">Doxmate</a>/<a href="https://github.com/luozhihua/grunt-doxmate">Grunt-Doxmate</a></li></ul></li><li>项目构建工具<ul><li><a href="http://www.gnu.org/software/make/">make</a>/<a href="http://ant.apache.org/">Ant</a></li><li><a href="http://code.google.com/p/gyp/">GYP</a></li><li><a href="http://gruntjs.com/">Grunt</a></li><li><a href="http://gulpjs.com/">Gulp</a></li><li><a href="http://yeoman.io/">Yeoman</a></li><li><a href="http://fis.baidu.com/">FIS</a></li><li><a href="https://github.com/modulejs/modjs">Mod</a></li></ul></li><li>ES6＋ 转换器<ul><li><a href="https://github.com/google/traceur-compiler">Traceur</a></li><li><a href="https://babeljs.io/">Babel</a></li></ul></li></ul></li><li>代码组织<ul><li>类库模块化<ul><li><a href="http://www.commonjs.org/">CommonJS</a>/AMD</li><li><a href="http://yuilibrary.com/projects/yui3/">YUI3模块</a></li><li><a href="http://webpack.github.io/">webpack</a></li></ul></li><li>业务逻辑模块化<ul><li><a href="https://github.com/twitter/bower">bower</a>/<a href="https://github.com/component/component">component</a></li></ul></li><li>文件加载<ul><li><a href="http://labjs.com/">LABjs</a></li><li><a href="http://seajs.org/">SeaJS</a>/<a href="http://requirejs.org/">Require.js</a></li></ul></li><li>模块化预处理器<ul><li><a href="https://github.com/substack/node-browserify">Browserify</a></li></ul></li></ul></li><li>安全<ul><li><a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery">CSRF</a>/<a href="http://en.wikipedia.org/wiki/Cross-site_scripting">XSS</a></li><li><a href="http://www.w3.org/TR/CSP/">CSP</a></li><li><a href="https://developer.mozilla.org/docs/Web/Security/Same-origin_policy">Same-origin policy</a></li><li>ADsafe/Caja/Sandbox</li></ul></li><li>移动Web<ul><li>HTML5/CSS3</li><li><a href="http://zh.wikipedia.org/wiki/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1">响应式网页设计</a></li><li><a href="http://zeptojs.com/">Zeptojs</a>/<a href="http://cubiq.org/iscroll">iScroll</a></li><li>V5/<a href="http://www.sencha.com/products/touch">Sencha Touch</a></li><li><a href="http://phonegap.com/">PhoneGap</a>/<a href="https://cordova.apache.org/">Cordova</a></li><li><a href="http://jquerymobile.com/">jQuery Mobile</a></li><li><a href="http://www.w3.org/Mobile/">W3C Mobile Web Initiative</a></li><li><a href="http://validator.w3.org/mobile/">W3C mobileOK Checker</a></li><li><a href="http://openmobilealliance.org/">Open Mobile Alliance</a></li><li><a href="https://facebook.github.io/react-native/">React Native</a></li><li><a href="http://ionicframework.com/">ionic</a></li></ul></li><li>前沿技术社区/会议<ul><li><a href="http://d2forum.org/">D2</a>/<a href="http://www.webrebuild.org/">WebRebuild</a></li><li>NodeParty/<a href="http://w3ctech.com/">W3CTech</a>/<a href="http://www.html5dw.com/">HTML5梦工厂</a></li><li><a href="http://jsconf.com/">JSConf</a>/<a href="http://jsconf.cn/">沪JS(JSConf.cn)</a></li><li>QCon/Velocity/SDCC</li><li><a href="http://jsconf.com/">JSConf</a>/<a href="http://www.nodeconf.com/">NodeConf</a></li><li><a href="http://cssconf.com/">CSSConf</a></li><li>YDN/YUIConf</li><li>HybridApp</li><li><a href="http://whatwg.org/">WHATWG</a></li><li><a href="https://developer.mozilla.org/zh-CN/">MDN</a></li><li><a href="http://codepen.io/">codepen</a></li><li><a href="http://www.w3cplus.com/">w3cplus</a></li><li><a href="https://cnodejs.org/">CNode</a></li></ul></li><li>计算机知识储备<ul><li>编译原理</li><li><a href="http://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C">计算机网络</a></li><li><a href="http://zh.wikipedia.org/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F">操作系统</a></li><li>算法原理</li><li>软件工程/软件测试原理</li><li><a href="http://www.unicode.org/">Unicode</a></li></ul></li><li>软技能<ul><li>知识管理/总结分享</li><li>沟通技巧/团队协作</li><li>需求管理/PM</li><li>交互设计/可用性/可访问性知识</li></ul></li><li>可视化<ul><li>SVG/Canvas/VML</li><li>SVG: <a href="http://d3js.org/">D3</a>/<a href="http://dmitrybaranovskiy.github.io/raphael/">Raphaël</a>/<a href="http://snapsvg.io/">Snap.svg</a>/<a href="http://datavlab.org/datavjs/">DataV</a></li><li>Canvas: <a href="http://www.createjs.com/">CreateJS</a>/<a href="http://kineticjs.com/">KineticJS</a></li><li><a href="http://en.wikipedia.org/wiki/WebGL">WebGL</a>/<a href="http://threejs.org/">Three.JS</a></li></ul></li></ul></li><li>后端工程师<ul><li>编程语言<ul><li>C/C++/Java/PHP/Ruby/Python/…</li></ul></li><li>网页服务器<ul><li><a href="http://nginx.org/en/">Nginx</a></li><li><a href="http://httpd.apache.org/">Apache</a></li><li><a href="http://www.lighttpd.net/">Lighttpd</a></li></ul></li><li>数据库<ul><li>SQL</li><li><a href="http://www.mysql.com/">MySQL</a>/<a href="http://www.postgresql.org/">PostgreSQL</a>/<a href="http://www.oracle.com/us/products/database/overview/index.html">Oracle</a>/<a href="http://www-01.ibm.com/software/data/db2">DB2</a></li><li><a href="http://www.mongodb.org/">MongoDB</a>/<a href="http://couchdb.apache.org/">CouchDB</a></li></ul></li><li>数据缓存<ul><li><a href="http://redis.io/">Redis</a></li><li><a href="http://memcached.org/">Memcached</a></li></ul></li><li>文件缓存/代理<ul><li><a href="https://www.varnish-cache.org/">Varnish</a></li><li><a href="http://www.squid-cache.org/">Squid</a></li></ul></li><li>操作系统<ul><li>Unix/Linux/OS X/Windows</li></ul></li><li>数据结构</li></ul></li></ul><h2 id="前端书籍推荐"><a href="#前端书籍推荐" class="headerlink" title="前端书籍推荐"></a>前端书籍推荐</h2><p>★越少越简单,越适合入门,★多的要么是难度比较高,要么是比较适合在后面看,比如讲性能之类的书.</p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><ul><li><a href="http://www.amazon.cn/Eric-Meyer-%E8%B0%88-CSS-%E8%BF%88%E8%80%B6/dp/B00170M84I/">Eric Meyer 谈 CSS（卷二）</a>★★★</li><li><a href="http://book.douban.com/subject/2308234/">CSS权威指南 （第3版）</a>★★</li><li><a href="http://book.douban.com/subject/4736167/">精通CSS</a>★★★</li><li><a href="http://book.douban.com/subject/21338365/">HTML &amp; CSS设计与构建网站</a>★</li></ul><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><ul><li><a href="http://book.douban.com/subject/26433805/">JavaScript &amp; jQuery交互式Web前端开发</a>★</li><li><a href="http://book.douban.com/subject/6038371/">JavaScript DOM编程艺术 （第2版）</a>★</li><li><a href="http://book.douban.com/subject/10546125/">JavaScript高级程序设计（第3版）</a>★★</li><li><a href="http://book.douban.com/subject/10792216/">锋利的jQuery</a>★★</li><li><a href="http://book.douban.com/subject/5362856/">高性能JavaScript</a>★★★</li><li><a href="http://book.douban.com/subject/3590768/">JavaScript语言精粹</a>★★★</li><li><a href="http://book.douban.com/subject/10549733/">JavaScript权威指南</a>★★★</li><li><a href="http://book.douban.com/subject/21792530/">编写可维护的JavaScript</a>★★★</li><li><a href="http://book.douban.com/subject/3012828/">JAVASCRIPT语言精髓与编程实践</a>★★★</li><li><a href="http://www.amazon.com/Effective-JavaScript-Specific-Software-Development/dp/0321812182">Effective Javascript</a>★★★</li><li><a href="http://book.douban.com/subject/3176860/">Secrets of the JavaScript Ninja</a>★★★</li><li><a href="http://book.douban.com/subject/11506062/">JavaScript模式</a>★★★</li><li><a href="http://book.douban.com/subject/3329540/">JavaScript设计模式</a>★★★★</li><li><a href="http://book.douban.com/subject/10733304/">基于MVC的JavaScript Web富应用开发</a>★★★</li></ul><h3 id="性能实践"><a href="#性能实践" class="headerlink" title="性能实践"></a>性能实践</h3><ul><li><a href="https://book.douban.com/subject/3132277/">高性能网站建设指南</a>★</li><li><a href="https://book.douban.com/subject/4719162/">高性能网站建设进阶指南</a>★★</li><li><a href="http://book.douban.com/subject/25891125/">Web性能实践日志</a>★★★</li><li><a href="http://book.douban.com/subject/25856314/">Web性能权威指南</a>★★★</li></ul><h3 id="版本控制工具"><a href="#版本控制工具" class="headerlink" title="版本控制工具"></a>版本控制工具</h3><ul><li><a href="http://book.douban.com/subject/4813786/">版本控制之道 (git)</a>★★</li><li><a href="http://iissnan.com/progit/">Pro Git</a>★★★</li><li><a href="http://book.douban.com/subject/6526452/">Git权威指南</a>★★★★</li></ul><h2 id="后端书籍推荐"><a href="#后端书籍推荐" class="headerlink" title="后端书籍推荐"></a>后端书籍推荐</h2><h3 id="Linux管理"><a href="#Linux管理" class="headerlink" title="Linux管理"></a>Linux管理</h3><ul><li><a href="http://book.douban.com/subject/3042029/">Linux 系统管理技术手册</a></li><li><a href="http://book.douban.com/subject/4889838/">鸟哥的 Linux 私房菜</a></li><li><a href="http://www.thegeekstuff.com/linux-101-hacks-free-ebook-non-english/">Linux 101 Hacks</a></li><li><a href="http://book.douban.com/subject/3519360/">UNIX Shell Scripting</a></li><li><a href="http://book.douban.com/subject/6806862/">The Linux Command Line</a></li><li><a href="http://oreilly.com/openbook/linag2/book/index.html">Linux Network Administrator’s Guide</a></li></ul><h3 id="Linux编程"><a href="#Linux编程" class="headerlink" title="Linux编程"></a>Linux编程</h3><ul><li><a href="http://book.douban.com/subject/4831448/">Linux程序设计</a></li><li><a href="http://book.douban.com/subject/3907181/">Linux系统编程</a></li><li><a href="http://book.douban.com/subject/1788421/">Unix环境高级编程</a></li><li><a href="http://book.douban.com/subject/1467587/">Unix编程艺术</a></li><li><a href="http://book.douban.com/subject/4292217/">The Linux Programming Interface</a></li><li><a href="http://book.douban.com/subject/3652388/">程序员的自我修养</a></li><li><a href="http://book.douban.com/subject/2287506/">深入理解Linux内核</a></li><li><a href="http://book.douban.com/subject/1500149/">Unix网络编程</a></li><li><a href="http://book.douban.com/subject/1088054/">TCP/IP高级编程</a></li></ul><h3 id="C-C"><a href="#C-C" class="headerlink" title="C/C++"></a>C/C++</h3><ul><li><a href="http://book.douban.com/subject/4141733/">Linux C编程一站式学习</a></li><li><a href="http://book.douban.com/subject/3012360/">C和指针</a></li><li><a href="http://book.douban.com/subject/2778632/">C陷阱与缺陷</a></li><li><a href="http://book.douban.com/subject/2377310/">C专家编程</a></li><li><a href="http://book.douban.com/subject/2226913/">C语言核心技术</a></li><li><a href="https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0CDEQFjAA&url=http://blogimg.chinaunix.net/blog/upfile2/110210170023.pdf&ei=P95mUfrmNKKriALS04HAAw&usg=AFQjCNEzB88PnpfL0fRgJDkP3O9TlBPswA&sig2=isyd4ktsByNBMa5M9EPhRQ&bvm=bv.45107431,d.cGE&cad=rjt">彻底搞定C指针</a></li><li><a href="http://book.douban.com/subject/21317828/">征服C指针</a></li><li><a href="http://book.douban.com/subject/1094797/">C++编程思想</a></li><li><a href="http://book.douban.com/subject/2116929/">高质量程序设计指南—C/C++语言</a></li><li><a href="http://book.douban.com/subject/1484262/">Inside the C++ Object Model</a></li><li><a href="http://www.stroustrup.com/Tour.html">A Tour of C++</a></li><li><a href="http://en.wikipedia.org/wiki/The_C%2B%2B_Programming_Language">The C++ Programming Language</a></li><li><a href="http://www.cppstdlib.com/">The C++ Standard Library - A Tutorial and Reference</a></li><li><a href="http://webstore.ansi.org/RecordDetail.aspx?sku=INCITS/ISO/IEC+14882-2012">The C++ Standard (INCITS/ISO/IEC 14882-2011)</a></li><li><a href="http://www.artima.com/shop/overview_of_the_new_cpp">Overview of the New C++</a></li></ul><h2 id="前端工作面试"><a href="#前端工作面试" class="headerlink" title="前端工作面试"></a>前端工作面试</h2><ul><li><a href="https://github.com/darcyclarke/Front-end-Developer-Interview-Questions">前端工作面试问题</a></li><li><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions/Question">前端开发面试题（中文）</a></li></ul><h2 id="内容贡献者"><a href="#内容贡献者" class="headerlink" title="内容贡献者"></a>内容贡献者</h2><p>除了感谢Jayli提供了知识结构图的原本来，还感谢以下的内容贡献者们，结果由<code>git-summary</code>生成于2014-01-03：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">project  : fks</span><br><span class="line">repo age : 1 year, 3 months</span><br><span class="line">active   : 53 days</span><br><span class="line">commits  : 108</span><br><span class="line">files    : 4</span><br><span class="line">authors  :</span><br><span class="line">   56  Jackson Tian            51.9%</span><br><span class="line">    9  吴晓兰               8.3%</span><br><span class="line">    5  liyinkan                4.6%</span><br><span class="line">    3  chriscai                2.8%</span><br><span class="line">    3  fengxiaolong            2.8%</span><br><span class="line">    3  XiNGRZ                  2.8%</span><br><span class="line">    2  monkadd                 1.9%</span><br><span class="line">    2  Johnny                  1.9%</span><br><span class="line">    2  weiwenqing              1.9%</span><br><span class="line">    2  Yinkan Li               1.9%</span><br><span class="line">    2  Copypeng                1.9%</span><br><span class="line">    2  左岸                  1.9%</span><br><span class="line">    2  Jakukyo Friel           1.9%</span><br><span class="line">    2  Glowin                  1.9%</span><br><span class="line">    1  李亚川               0.9%</span><br><span class="line">    1  Evan You                0.9%</span><br><span class="line">    1  Mickey                  0.9%</span><br><span class="line">    1  Mickey-                 0.9%</span><br><span class="line">    1  Qi Junyuan              0.9%</span><br><span class="line">    1  browsnet                0.9%</span><br><span class="line">    1  doabit                  0.9%</span><br><span class="line">    1  guoxiangyang            0.9%</span><br><span class="line">    1  linkgod                 0.9%</span><br><span class="line">    1  popomore                0.9%</span><br><span class="line">    1  vipzhicheng             0.9%</span><br><span class="line">    1  zhaqiang                0.9%</span><br><span class="line">    1  Colin Luo               0.9%</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前端知识结构&quot;&gt;&lt;a href=&quot;#前端知识结构&quot; class=&quot;headerlink&quot; title=&quot;前端知识结构&quot;&gt;&lt;/a&gt;前端知识结构&lt;/h1&gt;&lt;h2 id=&quot;项目起源&quot;&gt;&lt;a href=&quot;#项目起源&quot; class=&quot;headerlink&quot; title=&quot;项</summary>
      
    
    
    
    
    <category term="前端" scheme="https://xulujin.gitee.io/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>试用期工作总结</title>
    <link href="https://xulujin.gitee.io/blog/2020/07/27/%E8%AF%95%E7%94%A8%E6%9C%9F%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93-%E5%BE%90%E8%B7%AF%E9%87%91/"/>
    <id>https://xulujin.gitee.io/blog/2020/07/27/%E8%AF%95%E7%94%A8%E6%9C%9F%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93-%E5%BE%90%E8%B7%AF%E9%87%91/</id>
    <published>2020-07-27T02:49:25.000Z</published>
    <updated>2020-07-30T10:12:00.355Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2020年"><a href="#2020年" class="headerlink" title="2020年"></a>2020年</h2><h5 id="0708"><a href="#0708" class="headerlink" title="0708"></a>0708</h5><h6 id="1-负责东鹏后台系统的各个页面的局部样式（scss）的修改。"><a href="#1-负责东鹏后台系统的各个页面的局部样式（scss）的修改。" class="headerlink" title="1.负责东鹏后台系统的各个页面的局部样式（scss）的修改。"></a>1.负责东鹏后台系统的各个页面的局部样式（scss）的修改。</h6><blockquote><p>1.比如一些table布局溢出看不到内容。</p><p>2.比如控制一处表单一行显示等，主要修改element的样式。</p><p>3.遇到element的table布局下面多一条横线，添加如下代码解决</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="selector-class">.el-table</span><span class="selector-pseudo">::before</span> &#123; </span><br><span class="line">   // 解决table-el布局栏多一条线的问题z-index: inherit;</span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure></blockquote><h6 id="2-在钉钉直播观看胡主管讲关于多租户saas架构设计"><a href="#2-在钉钉直播观看胡主管讲关于多租户saas架构设计" class="headerlink" title="2.在钉钉直播观看胡主管讲关于多租户saas架构设计"></a>2.在钉钉直播观看胡主管讲关于多租户saas架构设计</h6><blockquote><p>定义：</p><p>​     SaaS是Software-as-a-service（软件即服务）。SaaS提供商为企业搭建信息化所需要的所有网络基础设施及软件、硬件运作平台，并负责所有前期的实施、后期的维护等一系列服务，企业无需购买软硬件、建设机房、招聘IT人员，即可通过互联网使用信息系统。就像打开自来水龙头就能用水一样，企业根据实际需要，向SaaS提供商租赁软件服务。 </p><p>我的认识：</p><p>​    对不同的租户提供不同的权限，返回不同的路由表，即显示的页面也不同。</p><p>实现的方面：</p><p>​    1.数据库实现</p><p>​        多个租户可能有多个不同的表或者不同的字段来分开</p><p>​    2.程序实现</p><p>​        返回的权限码不同</p><p>​    3.应用实现</p><p>总结：</p><p>​    需要实现一些资料的共享，且还要达到每个租户的数据隔离（自己的数据只有自己看的到）</p></blockquote><h6 id="3-钉钉直播-2020期刊分享-大数据开发部-大数据技术体系初窥"><a href="#3-钉钉直播-2020期刊分享-大数据开发部-大数据技术体系初窥" class="headerlink" title="3.钉钉直播-2020期刊分享-大数据开发部-大数据技术体系初窥"></a>3.钉钉直播-2020期刊分享-大数据开发部-大数据技术体系初窥</h6><blockquote><p>1.分享主题</p><p>​    ①让您了解*<strong>大数据前沿技术*</strong>，不管在BI领域还是H5领域瞬          间变身专家级Level。</p><p>​    ②让您了解炫酷的<strong>数据可视化</strong>是怎么做出来的，它的极限在哪    儿？抑或没有极限。</p><p>​    ③从一堆普通的数据，如何经过技术处理变成了生动互操作的    直观图表？这个过程中数仓起了哪些作用？</p><p>2.演讲的同学</p><p>​    前端：曾诚、李小平</p><p>​    java：王海杏、黄任成</p><p>3.关于前端</p><p>​    从前端三剑客HTML，CSS，JS基础，到前端自动化开发npm，webpack和Vue全家桶，前端的同学们讲的很不错，让我了解到前端开发是包括了日常用的一些技术但不仅限于这些，应验了一句圈子里常说的话：前端入门容易，精通难。但其实又何止前端是这样，其他像java，数据库，运维等等，都是如此。</p></blockquote><h5 id="0724"><a href="#0724" class="headerlink" title="0724"></a>0724</h5><h6 id="1-负责管理中心的-参数管理和租户主表-页面功能的实现。"><a href="#1-负责管理中心的-参数管理和租户主表-页面功能的实现。" class="headerlink" title="1.负责管理中心的 参数管理和租户主表 页面功能的实现。"></a>1.负责管理中心的 参数管理和租户主表 页面功能的实现。</h6><blockquote><p>1.调用新增菜单接口在路由表新增页面，接口为 <a href="http://192.168.2.232:8080/euicp-biz-service/swagger-ui.html#/operations/%E8%8F%9C%E5%8D%95%E7%AE%A1%E7%90%86%E6%8E%A5%E5%8F%A3/insertMenuUsingPOST">/menu/insertMenu</a> ，填写相应的路由名称和路由url。</p><p>2.参数管理布局和接口基本参照字典管理来编写；租户主表布局参照用户管理，租户主表的租户除了有租户的信息，多了一项租户的属性，目前暂时只显示是否为新窗口打开报表。</p><p>3.每个页面对表格的数据操作有    编辑，删除，修改状态，预览，授权，角色绑定，映射，详情，同步，测试，查看，取消收藏；但不是每个路由的表格都有所有的操作，是根据每次切换路由获取到表格数据，判断里面有没有这个操作权限，逐一显示出来；其中说一下删除，后端返回了两种接口，一种是硬删除，一种是软删除(改变其status状态，不算是删除)。</p><p>4.碰到问题：对Vue定义的一些方法熟悉，常常碰到500错误与后端协商。</p><p>4.问题起因：500错误可能是因为前端带过去的参数不规范导致，也可能是后端没对多个出现的情况进行判断。</p></blockquote><h6 id="2-了解了单点登录的流程。"><a href="#2-了解了单点登录的流程。" class="headerlink" title="2.了解了单点登录的流程。"></a>2.了解了单点登录的流程。</h6><blockquote><h5 id="1-单点登录的定义："><a href="#1-单点登录的定义：" class="headerlink" title="1.单点登录的定义："></a>1.单点登录的定义：</h5><p>​     单点登录（Single Sign On），简称为 SSO，是比较流行的企业业务整合的解决方案之一。SSO的定义是在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。</p><h5 id="2-实现方法："><a href="#2-实现方法：" class="headerlink" title="2.实现方法："></a>2.实现方法：</h5><p>​    server端：</p><p>​         “共享<a href="https://baike.baidu.com/item/Cookie/1119">Cookie</a>”这个就是上面提到的共享session的方式 </p><pre><code>    SSO-Token方式因为共享session的方式不安全，所以我们不再以session-id作为身份的标识。我们另外生成一种标识，把它取名SSO-Token(或Ticket) </code></pre><p>​    浏览器端:</p><p>​         用户登录成功拿到token(或者是session-id)后怎么让浏览器存储和分享到其它域名下？同域名很简单，把token存在cookie里，把cookie的路径设置成顶级域名下，这样所有子域都能读取cookie中的token。这就是共享cookie的方式（这才叫共享Cookie嘛，上面那个应该叫共享session）</p><h5 id="3-前端负责单点登录哪些"><a href="#3-前端负责单点登录哪些" class="headerlink" title="3.前端负责单点登录哪些"></a>3.前端负责单点登录哪些</h5><p>​    大部分单点登录逻辑都交给后端进行处理；</p><p>​    前端需判断是否为跳转到loading登录，loading可能有几种登录方式，比如微信登录或者根据地址栏参数登录；地址栏又会传不同的字段过来，比如是code、token或者其他租户规定的字段，再调用后端返回的不同的接口进行验证登录；</p><p>​    也有些租户，比如东鹏，需求是不使用跳转loading页登录，要和系统登陆一样，这时需要根据打开当前页面返回的用户信息的loginType字段判断是系统默认登录方式还是像东鹏这样的租户登录的方式。</p></blockquote><h6 id="3-修改东鹏页面日常的一些bug。"><a href="#3-修改东鹏页面日常的一些bug。" class="headerlink" title="3.修改东鹏页面日常的一些bug。"></a>3.修改东鹏页面日常的一些bug。</h6><blockquote><p>1.调用新增接口新增一段信息后，再次打开表单后表单验证提示不消失。</p><p>​    起因：是表单域的  el-item-form 的prop属性 与 v-model的值  的名称不一样导致的。</p><p>​    解决方法：1.可以将 prop属性 与 v-model的值  的名称改成一样的(推荐)；2.使用重置表单验证的方法     this.$refs[formName].resetFields() ，在提交接口之后添加，方法比较粗暴，不建议使用。</p><p>2.vue router连续点击多次路由报错解决方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="comment">// 在main.js下添加以下代码：</span></span><br><span class="line">&gt;<span class="keyword">const</span> originalPush = Router.prototype.push</span><br><span class="line">&gt;Router.prototype.push = <span class="function"><span class="keyword">function</span> <span class="title">push</span>(<span class="params">location</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> originalPush.call(<span class="built_in">this</span>, location).catch(<span class="function"><span class="params">err</span> =&gt;</span> err)</span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure><p>3.角色管理 点击授权按钮，其中没有子集的父属性不会被勾选。</p><p>​    起因：在实例中定义了一个array_diff方法，里面的逻辑涉及到浅拷贝影响数组的内存地址；</p><p>​    解决：加一个判断，如果这个父属性也被选中了，判断它有没有子集，有子集就剔除，反之…</p><p>4.</p></blockquote><h6 id="4-兼容IE9-样式适配。"><a href="#4-兼容IE9-样式适配。" class="headerlink" title="4.兼容IE9+样式适配。"></a>4.兼容IE9+样式适配。</h6><blockquote><p>1.根据东鹏租户的需求，兼容IE9浏览器。</p><p>2.IE9 ，IE10， IE11三个版本对一种代码所体现出来的样式都有不同，IE10和IE11大体差别不大，侧重点在IE9，它不支持flex布局，所以之前写的flex不生效，可以使用float浮动来解决(推荐)，也可使用position定位解决，这里我使用了float。</p><p>3.对IE9 ，IE10， IE11媒体查询设置样式，媒体查询模板代码参考下面</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="comment">// 1920px, 1440px, 1366px, IE9+适配媒体查询模板</span></span><br><span class="line"></span><br><span class="line">&gt;<span class="keyword">@media</span> screen <span class="keyword">and</span> (max-width: <span class="number">1920px</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">&gt;<span class="keyword">@media</span> screen <span class="keyword">and</span> (max-width: <span class="number">1440px</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">&gt;<span class="keyword">@media</span> screen <span class="keyword">and</span> (max-width: <span class="number">1366px</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">&gt;<span class="comment">/* IE Hacks: targets IE 8, 9 and 10 , 需要先设置IE 9 + 才能去设置IE 10 +*/</span></span><br><span class="line">&gt;<span class="keyword">@media</span> screen\<span class="number">0</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">&gt;<span class="comment">/* IE Hacks: targets IE 10 + , 需要先设置IE 10 + 再去设置IE 11 */</span></span><br><span class="line">&gt;<span class="keyword">@media</span> screen <span class="keyword">and</span> (-ms-high-contrast: active),</span><br><span class="line">&gt;(-ms-high-contrast: none) &#123;</span><br><span class="line"></span><br><span class="line"> 类名&#123; <span class="comment">/* IE 10 + */</span></span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> _:-ms-fullscreen, :root, 类名 &#123; /* IE <span class="number">11</span> */</span><br><span class="line"> &#125;  </span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure><p>4.IE9也不支持过渡和动画，如果需要做动画，只能使用js，但是考虑到性能，还是不做为好。</p></blockquote><h5 id="0728"><a href="#0728" class="headerlink" title="0728"></a>0728</h5><h6 id="1-东鹏页面增加二级菜单收缩功能。"><a href="#1-东鹏页面增加二级菜单收缩功能。" class="headerlink" title="1.东鹏页面增加二级菜单收缩功能。"></a>1.东鹏页面增加二级菜单收缩功能。</h6><blockquote><p>1.需求详解：在二级菜单里面增加一个按钮，在点击按钮时切换菜单状态(收缩状态还是展开状态)；每个一级菜单的二级菜单都是同步的状态。</p><p>2.具体实现：定义初始的状态，在点击按钮后，下一次点击，判断当前的状态，改变二级菜单的宽度即可。</p><p>3.遇到的问题：1.IE9中不支持flex布局，需要做另外处理；2.1366px 1440px 1920px各个屏幕会有些不同，1920px出现菜单收缩状态时，它没有被内容区域全部覆盖；</p><p>4.解决办法：1.IE9使用的float布局，做另外处理；2.1920px下将内容区域的z-index设置大于二级菜单的z-index。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2020年&quot;&gt;&lt;a href=&quot;#2020年&quot; class=&quot;headerlink&quot; title=&quot;2020年&quot;&gt;&lt;/a&gt;2020年&lt;/h2&gt;&lt;h5 id=&quot;0708&quot;&gt;&lt;a href=&quot;#0708&quot; class=&quot;headerlink&quot; title=&quot;0708&quot;</summary>
      
    
    
    
    
    <category term="智扬信达" scheme="https://xulujin.gitee.io/blog/tags/%E6%99%BA%E6%89%AC%E4%BF%A1%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>vscode常用插件在</title>
    <link href="https://xulujin.gitee.io/blog/2020/07/17/vscode%E6%8F%92%E4%BB%B6%E5%A4%A7%E5%85%A8/"/>
    <id>https://xulujin.gitee.io/blog/2020/07/17/vscode%E6%8F%92%E4%BB%B6%E5%A4%A7%E5%85%A8/</id>
    <published>2020-07-17T06:31:29.000Z</published>
    <updated>2021-01-06T09:50:29.555Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vsCode-常用插件"><a href="#vsCode-常用插件" class="headerlink" title="vsCode 常用插件"></a>vsCode 常用插件</h1><p><img src="https://cdn2.jianshu.io/assets/default_avatar/4-3397163ecdb3855a0a4139c34a695885.jpg" alt="img"></p><p><a href="https://www.jianshu.com/u/02786e6c54b3">shmaur</a>关注</p><p>0.1622019.06.20 15:09:31字数 775阅读 23,810</p><p>记录一下所用的插件</p><h3 id="1-auto-close-tag"><a href="#1-auto-close-tag" class="headerlink" title="1. auto close tag"></a>1. auto close tag</h3><p>​      自动关闭标签，在开始标记的结束括号中键入后，将自动插入结束标记</p><h3 id="2-Auto-Comment-Blocks"><a href="#2-Auto-Comment-Blocks" class="headerlink" title="2. Auto Comment Blocks"></a>2. Auto Comment Blocks</h3><p>​      自动插入注释行</p><h3 id="3-Auto-Rename-Tag"><a href="#3-Auto-Rename-Tag" class="headerlink" title="3. Auto Rename Tag"></a>3. Auto Rename Tag</h3><p>​      自动重命名配对的HTML / XML标记</p><h3 id="4-Auto-Complete-Tag"><a href="#4-Auto-Complete-Tag" class="headerlink" title="4. Auto Complete Tag"></a>4. Auto Complete Tag</h3><p>​      结合了自动关闭标签与同时修改同步标签</p><h3 id="5-Beautify"><a href="#5-Beautify" class="headerlink" title="5. Beautify"></a>5. Beautify</h3><p>​      美化代码<a href="https://links.jianshu.com/go?to=%255Bhttps://marketplace.visualstudio.com/items?itemName=HookyQR.beautify%255D(https://marketplace.visualstudio.com/items?itemName=HookyQR.beautify)">参考资料</a></p><h3 id="6-Code-Runner"><a href="#6-Code-Runner" class="headerlink" title="6. Code Runner"></a>6. Code Runner</h3><p>​      可以直接运行多种语言的代码片段和文件</p><h3 id="7-Code-Spell-Checker"><a href="#7-Code-Spell-Checker" class="headerlink" title="7. Code Spell Checker"></a>7. Code Spell Checker</h3><p>​      代码拼写检查工具</p><h3 id="8-Drat"><a href="#8-Drat" class="headerlink" title="8. Drat"></a>8. Drat</h3><p>​      支持 Dart编程语言，并提供有效编辑，重构，运行和重新加载Flutter 移动应用程序和AngularDartWeb应用程序的工具。</p><h3 id="9-Debugger-for-Chrome"><a href="#9-Debugger-for-Chrome" class="headerlink" title="9. Debugger for Chrome"></a>9. Debugger for Chrome</h3><p>​      从VS Code调试在Google Chrome中运行的JavaScript代码。</p><h3 id="10-EditorConfig-for-VS-Code"><a href="#10-EditorConfig-for-VS-Code" class="headerlink" title="10. EditorConfig for VS Code"></a>10. EditorConfig for VS Code</h3><p>​      EditorConfig帮助开发人员定义和维护一致的编码风格在不同的编辑器和IDE。<br>      EditorConfig项目包含一个文件格式定义编码风格和文本编辑器插件的集合。<br>      EditorConfig文件易于阅读并且他们与版本控制器很好地合作。</p><h3 id="11-ESLint"><a href="#11-ESLint" class="headerlink" title="11. ESLint"></a>11. ESLint</h3><p>​      代码检查工具</p><h3 id="12-filesize"><a href="#12-filesize" class="headerlink" title="12. filesize"></a>12. filesize</h3><p>​      实时查看当前文件的大小</p><h3 id="13-Flutter"><a href="#13-Flutter" class="headerlink" title="13. Flutter"></a>13. Flutter</h3><p>​      Flutter移动应用程序的支持，以及对Dart编程语言的支持。</p><h3 id="14-Git-History"><a href="#14-Git-History" class="headerlink" title="14. Git History"></a>14. Git History</h3><p>​      查看git历史与log，搜索等（包括git log）</p><h3 id="15-GitLens-—-Git-supercharged"><a href="#15-GitLens-—-Git-supercharged" class="headerlink" title="15. GitLens — Git supercharged"></a>15. GitLens — Git supercharged</h3><p>​      GitLens只是帮助您更好地理解代码。快速浏览一下，为什么以及何时更改了行或代码块。跳过历史记录，以获得有关代码演变的方式和原因的进一步见解</p><h3 id="16-IntelliSense-for-CSS-class-names-in-HTML"><a href="#16-IntelliSense-for-CSS-class-names-in-HTML" class="headerlink" title="16. IntelliSense for CSS class names in HTML"></a>16. IntelliSense for CSS class names in HTML</h3><p>​       CSS 类名智能提示，可以在html与css中进行智能提示</p><h3 id="17-HTMLHint"><a href="#17-HTMLHint" class="headerlink" title="17. HTMLHint"></a>17. HTMLHint</h3><p>​      HTML 静态检查规则</p><h3 id="18-Image-preview"><a href="#18-Image-preview" class="headerlink" title="18. Image preview"></a>18. Image preview</h3><p>​      在左侧可以预览图片和悬停中显示图片</p><h3 id="19-Import-Cost"><a href="#19-Import-Cost" class="headerlink" title="19. Import Cost"></a>19. Import Cost</h3><p>​      在VS代码编辑器中导入的程序包的大小</p><h3 id="20-JavaScript-ES6-code-snippets"><a href="#20-JavaScript-ES6-code-snippets" class="headerlink" title="20. JavaScript (ES6) code snippets"></a>20. JavaScript (ES6) code snippets</h3><p>​      ES6的代码片段</p><h3 id="21-JavaScript-Snippet-Pack"><a href="#21-JavaScript-Snippet-Pack" class="headerlink" title="21. JavaScript Snippet Pack"></a>21. JavaScript Snippet Pack</h3><p>​      JS代码片段补全</p><h3 id="22-language-stylus"><a href="#22-language-stylus" class="headerlink" title="22. language-stylus"></a>22. language-stylus</h3><p>​      Stylus文件添加语法高亮</p><h3 id="23-stylelint"><a href="#23-stylelint" class="headerlink" title="23. stylelint"></a>23. stylelint</h3><p>​      格式化css代码<br>配置参考<a href="https://links.jianshu.com/go?to=https://stylelint.io/user-guide/configuration/">https://stylelint.io/user-guide/configuration/</a></p><h3 id="24-minapp"><a href="#24-minapp" class="headerlink" title="24. minapp"></a>24. minapp</h3><p>​      微信小程序标签、属性的智能补全（同时支持原生小程序、mpvue 和 wepy 框架，并提供 snippets）</p><h3 id="25-Node-js-Modules-Intellisense"><a href="#25-Node-js-Modules-Intellisense" class="headerlink" title="25. Node.js Modules Intellisense"></a>25. Node.js Modules Intellisense</h3><p>​      在import语句中自动完成Node.js模块</p><h3 id="26-Open-in-Browser"><a href="#26-Open-in-Browser" class="headerlink" title="26. Open in Browser"></a>26. Open in Browser</h3><p>​      在vscode中打开浏览器访问</p><h3 id="27-Path-Intellisense"><a href="#27-Path-Intellisense" class="headerlink" title="27. Path Intellisense"></a>27. Path Intellisense</h3><p>​      自动路径补全</p><h3 id="28-Prettier-Code-formatter"><a href="#28-Prettier-Code-formatter" class="headerlink" title="28. Prettier - Code formatter"></a>28. Prettier - Code formatter</h3><p>​      格式化代码</p><h3 id="29-Pug-Jade-snippets"><a href="#29-Pug-Jade-snippets" class="headerlink" title="29. Pug (Jade) snippets"></a>29. Pug (Jade) snippets</h3><p>​      pug语法提示</p><h3 id="30-Scss"><a href="#30-Scss" class="headerlink" title="30. Scss"></a>30. Scss</h3><p>​      缩进Sass语法高亮</p><h3 id="31-TypeScript-Importer"><a href="#31-TypeScript-Importer" class="headerlink" title="31. TypeScript Importer"></a>31. TypeScript Importer</h3><p>​      自动搜索工作空间文件中的TypeScript定义，并将所有已知符号作为完成项提供，以允许代码完成。</p><h3 id="32-Vetur"><a href="#32-Vetur" class="headerlink" title="32. Vetur"></a>32. Vetur</h3><p>​      代码格式化</p><h3 id="33-vscode-element-helper"><a href="#33-vscode-element-helper" class="headerlink" title="33. vscode-element-helper"></a>33. vscode-element-helper</h3><p>​      用element的就知道它的好，支持element代码自动补全</p><h3 id="34-vscode-icons"><a href="#34-vscode-icons" class="headerlink" title="34. vscode-icons"></a>34. vscode-icons</h3><p>​      在vscode显示文件图标</p><h3 id="35-vue-2-Snippets"><a href="#35-vue-2-Snippets" class="headerlink" title="35. vue 2 Snippets"></a>35. vue 2 Snippets</h3><p>​      vue 代码提示</p><h3 id="36-Vue-Vuex-TypeScript-Snippets"><a href="#36-Vue-Vuex-TypeScript-Snippets" class="headerlink" title="36. Vue/Vuex TypeScript Snippets"></a>36. Vue/Vuex TypeScript Snippets</h3><p>​      支持typescript的代码提示与生成片段</p><h3 id="37-VueHelper"><a href="#37-VueHelper" class="headerlink" title="37. VueHelper"></a>37. VueHelper</h3><p>​      vue 代码提示</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vsCode-常用插件&quot;&gt;&lt;a href=&quot;#vsCode-常用插件&quot; class=&quot;headerlink&quot; title=&quot;vsCode 常用插件&quot;&gt;&lt;/a&gt;vsCode 常用插件&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn2.jianshu.io/</summary>
      
    
    
    
    
    <category term="前端" scheme="https://xulujin.gitee.io/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>在工作中遇到的问题</title>
    <link href="https://xulujin.gitee.io/blog/2020/07/17/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%A2%B0%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>https://xulujin.gitee.io/blog/2020/07/17/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%A2%B0%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</id>
    <published>2020-07-17T06:31:29.000Z</published>
    <updated>2022-06-16T04:53:45.332Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2020"><a href="#2020" class="headerlink" title="2020"></a>2020</h2><h3 id="东鹏portal"><a href="#东鹏portal" class="headerlink" title="东鹏portal"></a>东鹏portal</h3><h4 id="07月09日"><a href="#07月09日" class="headerlink" title="07月09日"></a>07月09日</h4><blockquote><p>​        1.element-ui的table表格布局多了一条线<a style="color:#ff3c3c">（已解决）</a></p><p>​            答：添加样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;.el-table::before &#123; // 解决table-el布局栏多一条线的问题</span><br><span class="line"><span class="selector-tag">z-index</span>: <span class="selector-tag">inherit</span>;</span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure><p>​        2.element-ui新增表单提交数据后还出现验证<a style="color:#ff3c3c">（已解决）</a></p><p>​            答：请求接口之后重置表单验证</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="built_in">this</span>.$refs[formName].resetFields() <span class="comment">// 解决提交表单数据后还触发验证的问题</span></span><br></pre></td></tr></table></figure><p>​        3.常常碰到与后端对接口的问题<a style="color:#ff3c3c">（常见）</a>：比如返回的字段少了(分类字段)，比如新增用户过去带的状态(userStatus)是无效的(0),但是更新数据返回过来的还是有效的用户</p></blockquote><h3 id="祥生经营分析"><a href="#祥生经营分析" class="headerlink" title="祥生经营分析"></a>祥生经营分析</h3><h4 id="11月09日"><a href="#11月09日" class="headerlink" title="11月09日"></a>11月09日</h4><p>2020年11月06日开会需要提出的问题<br>1.svn账号问题，（因为有多个人同时进行项目协作，用同一个账号在导致冲突之后不能及时的找到根源而浪费时间）<br>2.vpn账号权限问题，vpn账号申请<br>3.</p><p>项目</p><p>1.关于数据的问题：数据不完整，导致联调时在接口请求方式正确的情况下错误判断为其他问题<br>2.后端接口规范问题：</p><blockquote><p>1.最好不要返回map类型数据</p><p>2.在返回数据带上相应的status，code，data，msg等等</p><p>3.在传入空字符串后端应判断接收该参数没传而返回相应的msg提示，比如：参数错误400错误</p><p>4.在少传了参数之后返回msg：参数缺失，而不是直接报400错误</p><p>5.接口文档可以一般用swragger把传的参数的备注model，和返回的参数的意思标注规范，必传可以用粗体列出来require，</p></blockquote><p>3.多人开发协调问题：</p><blockquote><p>1.规定时间上传代码，</p><p>2.上传的描述见开发框架的README.md文档</p><p>3.规定一个必须的发版时间（在确认所有人上传代码完毕）</p></blockquote><h4 id="11月08日"><a href="#11月08日" class="headerlink" title="11月08日"></a>11月08日</h4><p>1.关于sessionStorage存入函数的问题</p><blockquote><p>问题描述：1.由于需要页面之间需要sessionStorage来传值，需要将传的值JSON.stringify，但是有些需要传的值有函数，在JSON.stringify之后不会存储。</p><p>解决方法：1.首先需要使用toSting()将函数真正的转化为字符串，才可以将他存入到sessionStorage中。</p><p>​                 2.然后接收方需要使用eval函数将字符串执行。</p><p>​                    3.使用eval函数你会碰到Function statements require a function name，这是由于匿名函数直接执行而不知道他是谁的函数</p><p>​                    4.我们需要在这个需要执行的字符串外层加一个括号，然后再使用eval函数执行。</p></blockquote><h4 id="11月13日"><a href="#11月13日" class="headerlink" title="11月13日"></a>11月13日</h4><blockquote><p>1.关于IE不能打开tomcat运行的页面</p><p>​    问题可能起因：1.本机防火墙问题</p><p>​                                2.IE自身兼容性问题</p><p>2.关于tomcat换了端口之后，比如把8443换成8444端口，不能访问</p><p>​    问题可能起因：1.本机防火墙问题                    </p><p>​    解决方法：<br>   systemctl stop firewalld 关闭防火墙<br>   systemctl status  firewalld  查看防火墙状态</p><p>​    内外服务器如果比较安全的话，可以把防火墙关了</p><p>问题解决结果：完美解决！</p></blockquote><h4 id="12月02日"><a href="#12月02日" class="headerlink" title="12月02日"></a>12月02日</h4><blockquote><p>​        1.经营分析明细表下钻问题：</p><p>​            问题描述：由于后端返回的参数没有统一，返回的规范最好要有areaCode（组织编码），areaType（组织层级），且传的参数在签约，存货，计划页面中有多少个层级就写了多少个参数，这样做很不合理，于是在后面改成了传areaCode和areaType。</p></blockquote><h4 id="12月19日"><a href="#12月19日" class="headerlink" title="12月19日"></a>12月19日</h4><blockquote><p>东鹏portal碰到问题：</p><p>问题描述：1.前端本地请求接口不成功，但是打包到服务器没问题</p><p>问题起因：问题解决了，因为接口在这里set-cookie的时候，有一个”Secure”属性，但是，我本地启动的时候，是http协议启动的，这里的“Secure”属性会把我拦截掉，因为它觉得这是不安全的协议。后面我本地启动改成，https，就可以正常登录了。然后，我去调小城的本地，因为我们都是http，协议相同，所以可以登录。但是服务器是https的。 </p><p>问题解决结果：完美解决！</p></blockquote><h4 id="12月21日"><a href="#12月21日" class="headerlink" title="12月21日"></a>12月21日</h4><blockquote><p>问题描述：1.ant-design-vue 的table组件在企业微信PC端不显示  2.打包后样式不生效了</p><p>问题起因：是因为组件的样式在main.js注册时被覆盖了，所以所以导致这两个问题。</p><p>解决办法：将注册组件及其样式写到 import App from ‘./App.vue’; 前面就没问题了。</p><p>问题解决结果：完美解决！</p></blockquote><h2 id="2021"><a href="#2021" class="headerlink" title="2021"></a>2021</h2><h4 id="02月03日"><a href="#02月03日" class="headerlink" title="02月03日"></a>02月03日</h4><blockquote><p>项目：祥生经营分析平台</p><p>问题描述：关于 ant-design-vue table底部合计栏。</p><p>问题起因：因为 ant-design-vue table 插槽的footer的只是一行，而没有表格的功能，但是element有，所以想参照element制作底部合计栏目 </p><p>ant-design-vue table:<a href="https://www.antdv.com/components/table-cn/">https://www.antdv.com/components/table-cn/</a></p><p>element-ui table:<a href="https://element.eleme.cn/#/zh-CN/component/table#table-column-scoped-slot">https://element.eleme.cn/#/zh-CN/component/table#table-column-scoped-slot</a></p><p>解决办法：1.使用插槽给 ant-table 插进去两个footer 一个是普通footer，一个是用于fixed的footer,</p><p>html代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;sumShow == true&quot;</span> <span class="attr">slot</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line"> &lt;table</span><br><span class="line">   class=&quot;footer-table&quot;</span><br><span class="line">   :style=&quot;&#x27;width:&#x27; + (this.scrollData.x - 0.5) + &#x27;px&#x27;&quot;</span><br><span class="line"> &gt;</span><br><span class="line">   <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--              &lt;col style=&quot;width: 80px; min-width: 80px;&quot; /&gt;--&gt;</span></span><br><span class="line">     &lt;col</span><br><span class="line">       v-for=&quot;(item, index) in headerLists&quot;</span><br><span class="line">       :key=&quot;index&quot;</span><br><span class="line">       :style=&quot;colStyle(item)&quot;</span><br><span class="line">     /&gt;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">class</span>=<span class="string">&quot;ant-table-tbody&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: relative&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-if</span>=<span class="string">&quot;tableDatas.length &gt; 0&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">td</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in headerLists&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">         &#123;&#123;</span><br><span class="line">           typeof tableDatas0[item.dataIndex] == &#x27;object&#x27;</span><br><span class="line">             ? tableDatas0[item.dataIndex].value +</span><br><span class="line">               tableDatas0[item.dataIndex].unitValue</span><br><span class="line">             : tableDatas0[item.dataIndex]</span><br><span class="line">         &#125;&#125;</span><br><span class="line">         &#123;&#123;</span><br><span class="line">           tableDatas0[item.dataIndex].unitValue</span><br><span class="line">             ? &#x27;&#x27;</span><br><span class="line">             : item.scopedSlots</span><br><span class="line">             ? item.scopedSlots.customRender</span><br><span class="line">             : &#x27;&#x27;</span><br><span class="line">         &#125;&#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;sumShow == true&quot;</span> <span class="attr">slot</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line"> &lt;table</span><br><span class="line">   class=&quot;footer-table1&quot;</span><br><span class="line">   :style=&quot;</span><br><span class="line">     &#x27;width:&#x27; +</span><br><span class="line">       (this.scrollData.x - 0.5) +</span><br><span class="line">       &#x27;px;height:&#x27; +</span><br><span class="line">       tableFooterHeight +</span><br><span class="line">       &#x27;px&#x27;</span><br><span class="line">   &quot;</span><br><span class="line"> &gt;</span><br><span class="line">   <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--              &lt;col style=&quot;width: 80px; min-width: 80px;&quot; /&gt;--&gt;</span></span><br><span class="line">     &lt;col</span><br><span class="line">       v-for=&quot;(item, index) in headerLists&quot;</span><br><span class="line">       :key=&quot;index&quot;</span><br><span class="line">       :style=&quot;colStyle(item)&quot;</span><br><span class="line">     /&gt;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">class</span>=<span class="string">&quot;ant-table-tbody&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: relative&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-if</span>=<span class="string">&quot;tableDatas.length &gt; 0&quot;</span>&gt;</span></span><br><span class="line">       &lt;td</span><br><span class="line">         v-show=&quot;item.fixed&quot;</span><br><span class="line">         v-for=&quot;(item, index) in headerLists&quot;</span><br><span class="line">         :key=&quot;index&quot;</span><br><span class="line">         style=&quot;background: #fafafa;&quot;</span><br><span class="line">       &gt;</span><br><span class="line">         &#123;&#123;</span><br><span class="line">           typeof tableDatas0[item.dataIndex] == &#x27;object&#x27;</span><br><span class="line">             ? tableDatas0[item.dataIndex].value +</span><br><span class="line">               tableDatas0[item.dataIndex].unitValue</span><br><span class="line">             : tableDatas0[item.dataIndex]</span><br><span class="line">         &#125;&#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&gt;也就是和其tbody一样生成一个tfoot ， 其结构相同</span><br></pre></td></tr></table></figure><p>2.要做到左右跟着滚动，精髓是 事件onscroll 和窗口属性scrollleft</p><p>js代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="keyword">let</span> wrapDiv = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;ant-table-body&#x27;</span>)[<span class="number">0</span>]; <span class="comment">// 外层盒子div</span></span><br><span class="line"></span><br><span class="line">&gt;<span class="keyword">if</span> (wrapDiv) &#123;</span><br><span class="line"> wrapDiv.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> (wrapDiv.scrollTop &gt; <span class="number">20</span>) &#123;</span><br><span class="line">     <span class="built_in">this</span>.toTopClickActive = <span class="literal">true</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="built_in">this</span>.toTopClickActive = <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;);</span><br><span class="line"> <span class="keyword">if</span> (wrapDiv.scrollTop &gt; <span class="number">20</span>) &#123;</span><br><span class="line">   <span class="built_in">this</span>.toTopClickActive = <span class="literal">true</span>;</span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="built_in">this</span>.toTopClickActive = <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&gt;&#125;</span><br><span class="line"></span><br><span class="line">&gt;也就是在左右滑动时获取自己的scrollleft赋值给别人</span><br></pre></td></tr></table></figure><p>3.要做到fixed列，因为我们做了两个footer，其中一个footer就是用来fixed的，循环其headerList,来判断哪个列是要 fixed 的，需要fixed就显示出来。（我想ant-design-vue也是这一样的原理）</p><p>问题处理结果：完美解决！</p></blockquote><h4 id="02月04日"><a href="#02月04日" class="headerlink" title="02月04日"></a>02月04日</h4><blockquote><p>关于在祥生经营分析平台项目总结：</p><p>1.不足：</p><p>​    1.选用前端ui框架不合理，比如应该使用element-ui但是使用了ant-design-vue,</p><p>​    2.echarts封装不合理，刚开始几乎是并没有封装echarts,其封装程度还停留在东鹏手机bi的水平线，所以，在最后时间不是很紧的时候，自己研究了一种更加合理的封装方案（在项目门户的投模页面的symbolicChart.vue组件中），这个封装在我看来还是比较的合理，他拥有了许多的默认配置参数。</p><p>​    3.与后台初步工作协商没有达成很好的一致性，导致后台返回的数据结构在前端中不能合理的使用。</p><ol start="2"><li><p>学到的知识</p></li><li><p>熟悉了ant-design-vue ui框架的使用，并更加了解他与element-ui的区别，学习如何深度改装ant-design-vue的table组件，自己完成其  合计栏 的封装。</p></li><li><p>更加熟悉了echarts的封装，对其进行更加高度的封装，在项目中更加快速，高效的开发。</p></li><li><p>更加了解后台返回的数据结构怎么样才能合理的给前端去使用。</p></li><li><p>了解了服务器防火墙知识。</p></li><li><p>学会一些linux命令来上传前端包。</p></li><li><p>发现了webstorm的新大陆：断点调试，ftp上传，自带的shell命令行。</p></li></ol></blockquote><h4 id="02月20日"><a href="#02月20日" class="headerlink" title="02月20日"></a>02月20日</h4><blockquote><p>1.问题描述：后台返回一段字符中含有&lt;br&gt;换行标签，前端需要怎么处理才能换行显示。</p><p>2.解决办法：</p><p>​    ①：将后台返回的 &lt;br&gt; 标签替换成 \n , 使用 replace(/\n/g,’&lt;br&gt;’) 替换。</p><p>​    ②：如果是 vue 就使用v-html指令将其显示上去。</p><p>3.问题处理结果：完美解决！</p></blockquote><h3 id="金地集团投资管理平台"><a href="#金地集团投资管理平台" class="headerlink" title="金地集团投资管理平台"></a>金地集团投资管理平台</h3><h4 id="02月20日-1"><a href="#02月20日-1" class="headerlink" title="02月20日"></a>02月20日</h4><blockquote><p>项目：金地投资管理平台</p><p>1.关于该项目碰到的一些问题：</p><p>​        ①：客户需要用 IE 浏览器来使用采集平台，兼容IE成为一大问题。</p><p>​        ②：文件上传集成功能在IE浏览器无效。</p><p>​        ③：IE浏览器对 px2rem 1px转换单位不能识别。</p><p>​        ④：IE浏览器样式较丑，后期还需要修改。</p><p>​    解决办法：</p><p>​        ①：</p><p>​        ②：</p><p>​        ③：使用 postcss-plugin-px2rem 插件代替 postcss-px2rem</p><p>​        ④：</p><p>2.碰到的一些小知识：</p><p>​        ①：在 api 请求实例中创建 delete 方法 ，直接创建一个名为 delete 的方法报错，原因是 delete 是关键字。    </p></blockquote><h4 id="05月13日"><a href="#05月13日" class="headerlink" title="05月13日"></a>05月13日</h4><blockquote><div style="width:100%">![](https://pics3.baidu.com/feed/908fa0ec08fa513d9ac7880a6ebb04fcb0fbd9d7.jpeg?token=b6d793ae8142658f0bf6d4030e320f26)</div>    <p>使用 date-fns插件技巧：</p><p>1.得到此时的三年前的时间:</p><p>​    new Date(String(new Date().getFullYear() - 3) + this.$format(new Date(), ‘-MM’)) </p><p>​    原理是获取当前年减去 3 ，再拼接月份和日期等等；</p></blockquote><h4 id="05月18日"><a href="#05月18日" class="headerlink" title="05月18日"></a>05月18日</h4><blockquote><p>在 IE 浏览器碰到的代码执行顺序的问题；</p><p>场景描述： 在请求删除表格数据接口 deleteData（异步操作）之后调用请求当前数据接口 getData ;</p><p>​             在除了 IE 浏览器中可以不在 deleteData 的异步成功回调 then 函数调用 getData,也可以加载数据，但是在 IE 浏览器中，一定需要到 deleteData 的回调函数调用 getData 获取数据才能重新渲染； </p><p>得出结论：IE 浏览器对代码执行顺序较为严格，因为 js 是单线程的，要延后一段代码的执行就不能写成并行执行的代码；</p></blockquote><h4 id="06月01日"><a href="#06月01日" class="headerlink" title="06月01日"></a>06月01日</h4><blockquote><p>学到的东西：</p><ol><li>最好提前写好全局样式供后期使用；</li><li>比如写好一个 layout 全局样式用来布局；</li><li>写好一个弹窗样式用来布局；</li><li>写好多个主题的 表格 用来使用；</li><li>写好时间选择器的样式用来布局（时间选择器可以用组件封装一遍再投入使用，因为很多默认时间会是一样的）；</li><li>最好使用全局变量来做 echarts 图的 字体颜色，字体大小，背景颜色配置；这样对后期维护更加友好；</li><li>碰到相同的页面可以抽离成组件进行使用，碰到相似的页面可以将 数据data,方法methods 等等抽离成混入 mixin 代码使用；</li></ol></blockquote><h4 id="06月02日"><a href="#06月02日" class="headerlink" title="06月02日"></a>06月02日</h4><blockquote><ol><li>new Date(‘2015-5’)在IE浏览器会转化成 invalida Date , 需要协会曾规范的形式new Date(‘2015-05’)才能正常转化；</li></ol></blockquote><h4 id="06月04日"><a href="#06月04日" class="headerlink" title="06月04日"></a>06月04日</h4><blockquote><ol><li><p>问题描述： input file 文件上传，在第一次上传文件触发 change 事件之后，下次再 上传文件 将不会触发 change 事件；</p><p>解决办法：将这个 input dom元素刷新一遍；</p><p>具体方法：     1. 将这个 dom 删除，再克隆一个新的 dom 出来供使用；</p><p>​            2.在 vue 中可以使用 v-if ，将其 show 设置为 false ,再设置为true;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">        &lt;input v-if&#x3D;&quot;fileShow&quot; @change&#x3D;&#39;changeFile&#39; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default&#123;</span><br><span class="line">        data()&#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                fileShow:true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            reload()&#123;</span><br><span class="line">                this.fileShow &#x3D; false;</span><br><span class="line">                this.$nextTick(()&#x3D;&gt;&#123;</span><br><span class="line">                    this.fileShow &#x3D; true</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            changeFile()&#123;</span><br><span class="line">                console.log(&#39;触发change事件&#39;)</span><br><span class="line">                &#x2F;&#x2F; 做完其他操作刷新该 dom , 这样下次还会触发该change事件 </span><br><span class="line">                this.reload();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><h4 id="07月13日"><a href="#07月13日" class="headerlink" title="07月13日"></a>07月13日</h4><blockquote><h3 id="企业微信开启调试模式"><a href="#企业微信开启调试模式" class="headerlink" title="企业微信开启调试模式"></a>企业微信开启调试模式</h3><p>访问<a href="https://work.weixin.qq.com/api/doc/90000/90139/90315#%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1Windows%E7%89%88%E6%9C%AC%E8%B0%83%E8%AF%95">https://work.weixin.qq.com/api/doc/90000/90139/90315#%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1Windows%E7%89%88%E6%9C%AC%E8%B0%83%E8%AF%95</a></p><ol><li>把 <a href="https://dldir1.qq.com/foxmail/wwopen_docFile/devtools_resources.pak">devtools_resources.pak</a> 放到企业微信的安装目录下（复制的文件名，要保证为 devtools_resources.pak），注意安装目录带有版本号（4.0.1304.400是浏览器内核的版本号）；</li><li>关闭企业微信，重新启动；</li><li>按快捷键 ctrl + alt + shift + D，进入调试模式；</li><li>即可开启调试模式，关闭操作与开启操作相同；</li></ol></blockquote><h4 id="07月26日"><a href="#07月26日" class="headerlink" title="07月26日"></a>07月26日</h4><blockquote><p>表格在 IE 中使用了 position: relative 会失去边框</p></blockquote><h4 id="09月26日"><a href="#09月26日" class="headerlink" title="09月26日"></a>09月26日</h4><blockquote><p>自定义虚线边框</p><p>background: repeating-linear-gradient(90deg, #ccc, #ccc 1.5em, transparent 0, transparent 4em); </p><ol><li>90 deg为虚线左右边倾斜度</li><li>#ccc 为虚线颜色</li><li>1.5rem 为单个虚线长度</li><li>4rem 为虚线密度</li></ol></blockquote><h4 id="09月30日"><a href="#09月30日" class="headerlink" title="09月30日"></a>09月30日</h4><blockquote><p>tail -f xxx.log  查看 tomcat 实时日志(找到 /logs 文件夹下面)</p></blockquote><h3 id="智扬云平台产品"><a href="#智扬云平台产品" class="headerlink" title="智扬云平台产品"></a>智扬云平台产品</h3><h4 id="10月08日"><a href="#10月08日" class="headerlink" title="10月08日"></a>10月08日</h4><blockquote><p>关于使用在 react 中使用 px2rem 自适应插件</p><p>步骤：</p><ol><li><p>npm install postcss-plugin-px2rem lib-flexible –save-dev</p></li><li><p>在 config-overrides.js 中引用使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> px2rem = <span class="built_in">require</span>(<span class="string">&#x27;postcss-plugin-px2rem&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = override(</span><br><span class="line">  (config, env) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 重写postcss</span></span><br><span class="line">    rewirePostcss(config, &#123;</span><br><span class="line">      plugins: <span class="function">() =&gt;</span> [</span><br><span class="line">        <span class="comment">//关键:设置px2rem</span></span><br><span class="line">        px2rem(&#123;</span><br><span class="line">          rootValue: <span class="number">192</span>,</span><br><span class="line">          mediaQuery: <span class="literal">false</span>, <span class="comment">// （布尔值）允许在媒体查询中转换px。</span></span><br><span class="line">          minPixelValue: <span class="number">2</span>, <span class="comment">// 设置要替换的最小像素值(3px会被转rem)。 默认 0</span></span><br><span class="line">          exclude: <span class="regexp">/node-modules/</span></span><br><span class="line">        &#125;)</span><br><span class="line">      ],</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>在 main.js 入口文件引入 lib-flexible.js 自适应工具类；</li></ol></li></ol></blockquote><h4 id="10月09日"><a href="#10月09日" class="headerlink" title="10月09日"></a>10月09日</h4><blockquote><h1 id="create-react-app-IE11-无法运行"><a href="#create-react-app-IE11-无法运行" class="headerlink" title="create-react-app IE11 无法运行"></a>create-react-app IE11 无法运行</h1><p><img src="https://cdn2.jianshu.io/assets/default_avatar/4-3397163ecdb3855a0a4139c34a695885.jpg" alt="img"></p><p><a href="https://www.jianshu.com/u/793e9b9739ce">793e9b9739ce</a>关注</p><p>2021.03.29 17:24:19字数 111阅读 65</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>项目使用create-react-app、typescript创建，ie11下报‘语法错误’</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>1、安装react-app-polyfill</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;npm install react-app-polyfill</span><br></pre></td></tr></table></figure><ol><li>在src/index.tsx的<strong>最顶部</strong>引入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;import &#39;react-app-polyfill&#x2F;ie11&#39;;</span><br><span class="line">&gt;import &#39;react-app-polyfill&#x2F;stable&#39;;</span><br></pre></td></tr></table></figure><p>3、在packge.json文件下 browserlist 添加ie11</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;&quot;browserslist&quot;: &#123;</span><br><span class="line">       &quot;production&quot;: [</span><br><span class="line">           &quot;&gt;0.2%&quot;,</span><br><span class="line">           &quot;not dead&quot;,</span><br><span class="line">           &quot;not op_mini all&quot;,</span><br><span class="line">           &quot;ie 11&quot;</span><br><span class="line">       ],</span><br><span class="line">       &quot;development&quot;: [</span><br><span class="line">           &quot;last 1 chrome version&quot;,</span><br><span class="line">           &quot;last 1 firefox version&quot;,</span><br><span class="line">           &quot;last 1 safari version&quot;,</span><br><span class="line">           &quot;ie 11&quot;</span><br><span class="line">       ]</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>4、 重启。否则删除node_modules文件夹下的内容重新安装</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://links.jianshu.com/go?to=https://github.com/facebook/create-react-app/blob/master/packages/react-app-polyfill/README.md">https://github.com/facebook/create-react-app/blob/master/packages/react-app-polyfill/README.md</a></p><p>然而你以为你解决了吗，不!!!!!!!!!!!!!,虽然可以显示了，但是浏览器会直接卡死</p><p>这时就不要引入 react-app-polyfill 了（注释掉）</p><p>而是下载 babel-ployfill 和上述一样引入，方可解决</p></blockquote><h4 id="10月20日"><a href="#10月20日" class="headerlink" title="10月20日"></a>10月20日</h4><blockquote><p>关于使用 react 做项目：</p><ol><li><p>熟悉其 state 和 生命周期 ：</p><p>constructor </p><p>state 定义的数据存放 </p><p>defaultProps props 默认值 </p><p>componentDidMount<br>shouldComponentUpdate<br>componentWillUnmount<br>componentDidCatch<br>getSnapshotBeforeUpdate<br>componentDidUpdate<br>componentWillMount<br>UNSAFE_componentWillMount<br>componentWillReceiveProps<br>UNSAFE_componentWillReceiveProps<br>componentWillUpdate<br>UNSAFE_componentWillUpdate</p><p>render 渲染函数</p></li></ol><ol start="2"><li><p>使用 react 封装一个组件：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WaveLoading</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  state = &#123;&#125;;</span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div className=<span class="string">&quot;waveLoading&quot;</span>&gt;</span><br><span class="line">        &lt;div className=<span class="string">&quot;sk-wave&quot;</span>&gt;</span><br><span class="line">          &lt;div className=<span class="string">&quot;sk-wave-rect&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div className=<span class="string">&quot;sk-wave-rect&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div className=<span class="string">&quot;sk-wave-rect&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div className=<span class="string">&quot;sk-wave-rect&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div className=<span class="string">&quot;sk-wave-rect&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>组件间传值及方法调用：</p><p>通过 props 进行传值</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Template</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 一定写这个</span></span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// state 可以写在外面</span></span><br><span class="line">    <span class="built_in">this</span>.state = &#123;</span><br><span class="line">      trBottomShadow: <span class="literal">false</span>,</span><br><span class="line">      borderColor: <span class="string">&quot;#133653&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  state = &#123;</span><br><span class="line">    trBottomShadow: <span class="literal">false</span>,</span><br><span class="line">    borderColor: <span class="string">&quot;#133653&quot;</span>,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 子组件通信数据的默认值</span></span><br><span class="line">  <span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">    tableData: [],</span><br><span class="line">    headerList: [],</span><br><span class="line">    headerListFather: [],</span><br><span class="line">    height: <span class="string">&quot;90%&quot;</span>,</span><br><span class="line">    loading: <span class="literal">true</span>,</span><br><span class="line">    className: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;Son tableData=&#123;tableData&#125;&gt;&lt;/Son&gt;</span><br></pre></td></tr></table></figure></li></ol><p>   子组件向父组件发送事件</p>   <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件定义</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Button</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">    clickEvent: <span class="function">(<span class="params">index</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">       &lt;button onclick=&#123;<span class="built_in">this</span>.props.clickEvent.bind(<span class="literal">null</span>)&#125;&gt;&lt;/button&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 父组件调用</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  clickEvent = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 点击事件代码</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;Button</span><br><span class="line">        rowSelect=&#123;<span class="built_in">this</span>.clickEvent&#125;</span><br><span class="line">      &gt;&lt;/Button&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   父组件调用子组件的方法</p>   <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件定义</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  drawChart = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 画图方法</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">       &lt;button onclick=&#123;<span class="built_in">this</span>.props.clickEvent.bind(<span class="literal">null</span>)&#125;&gt;&lt;/button&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 父组件调用</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(props);</span><br><span class="line">    <span class="keyword">if</span> (props.onRef) &#123;</span><br><span class="line">      <span class="comment">//如果父组件传来该方法 则调用方法将子组件this指针传过去</span></span><br><span class="line">      props.onRef(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.state = &#123;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="title">componentDidMount</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 在 this 中可以得到 sonRef 这个</span></span><br><span class="line">    <span class="built_in">this</span>.sonRef.drawChart();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  clickEvent = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 点击事件代码</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;Son onRef=&#123;<span class="function">(<span class="params">ref</span>) =&gt;</span> (<span class="built_in">this</span>.sonRef = ref)&#125;&gt;</span><br><span class="line">      &lt;/Son&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/blog/C:/Users\luking\AppData\Local\Temp\1636700861225.png" alt="1636700861225"></p><p>​    </p><p>​    </p></blockquote><h4 id="11月22日"><a href="#11月22日" class="headerlink" title="11月22日"></a>11月22日</h4><blockquote><p>问题描述：关于复杂二级表头展示成后台返回的第一条数据问题</p><p>![lALPJv8gRRaQjDXM-80GnA_1692_251](D:\studyData\2020年\1202 - hexo博客\blog1202\source\img\lALPJv8gRRaQjDXM-80GnA_1692_251.png)</p><p>解决办法：</p><p>表头套表头+设置colspan+render-header </p></blockquote><h4 id="11月23日"><a href="#11月23日" class="headerlink" title="11月23日"></a>11月23日</h4><blockquote><p>问题描述：关于大项目交接给他人会碰到的问题⭐</p><p>问题详细：</p><pre><code>     1. 客户会问代码怎么运行，比如企业微信内部应用这种。     2. 客户会问你环境怎么搭建，需要哪些环境和编辑器，比如 nodejs ，visual studio code。     3. 客户会问生产发版注意事项。     4. 客户会问发版时的服务器地址和目录。     5. 客户会让你演示一遍权限怎么去配置。     6. 最后，交接文档需要把客户首先要问的写的显眼一点。</code></pre></blockquote><h4 id="12月2日"><a href="#12月2日" class="headerlink" title="12月2日"></a>12月2日</h4><blockquote><p>问题起因：关于证书在移动端无效问题</p><p>问题描述：</p><pre><code>1. 此证书并非来自可信的授权中心</code></pre><p>解决办法：</p><p>​    1.访问网站查询该证书是否有效：<a href="https://myssl.com/ssl.html">https://myssl.com/ssl.html</a></p></blockquote><blockquote><p>⭐小知识描述：关于多位数滚动组件封装</p><p>​    1.思路，准备1-10的标签；</p><p>​    2.竖起来排布，根据传回来的数字设置定位的 top 值；</p><p>​    3.添加 animation 动画；</p><p>代码：(React 组件)</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="comment">/* eslint-disable */</span></span><br><span class="line">&gt;<span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line">&gt;<span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">&quot;echarts&quot;</span>;</span><br><span class="line">&gt;<span class="keyword">import</span> <span class="string">&quot;./index.less&quot;</span>;</span><br><span class="line"></span><br><span class="line">&gt;<span class="class"><span class="keyword">class</span> <span class="title">CutProgressChart</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"> <span class="function"><span class="title">constructor</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">   <span class="built_in">super</span>(props);</span><br><span class="line">   <span class="keyword">if</span> (props.onRef) &#123;</span><br><span class="line">     <span class="comment">//如果父组件传来该方法 则调用方法将子组件this指针传过去</span></span><br><span class="line">     props.onRef(<span class="built_in">this</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">   bindRefs: <span class="string">&quot;cutProgressChart&quot;</span>,</span><br><span class="line">   styles: &#123; <span class="attr">width</span>: <span class="string">&quot;100%&quot;</span>, <span class="attr">height</span>: <span class="string">&quot;10px&quot;</span> &#125;,</span><br><span class="line">   show: <span class="literal">true</span>,</span><br><span class="line">   progressData: <span class="number">0</span>,</span><br><span class="line"> &#125;;</span><br><span class="line"> state = &#123;</span><br><span class="line">   myChart: <span class="literal">null</span>,</span><br><span class="line">   oprion: &#123;&#125;,</span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"> componentDidMount = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="built_in">this</span>.refs[<span class="built_in">this</span>.props.bindRefs]) &#123;</span><br><span class="line">     <span class="built_in">this</span>.state.myChart = echarts.init(<span class="built_in">this</span>.refs[<span class="built_in">this</span>.props.bindRefs]);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"> drawChart = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">const</span> &#123; bindRefs, progressData &#125; = <span class="built_in">this</span>.props;</span><br><span class="line">   <span class="keyword">let</span> &#123; option, myChart &#125; = <span class="built_in">this</span>.state;</span><br><span class="line">   <span class="keyword">if</span> (<span class="built_in">this</span>.refs[bindRefs]) &#123;</span><br><span class="line">     option = &#123;</span><br><span class="line">       xAxis: &#123;</span><br><span class="line">         splitLine: &#123;</span><br><span class="line">           show: <span class="literal">false</span>,</span><br><span class="line">         &#125;,</span><br><span class="line">         axisLabel: &#123;</span><br><span class="line">           show: <span class="literal">false</span>,</span><br><span class="line">         &#125;,</span><br><span class="line">         axisTick: &#123;</span><br><span class="line">           show: <span class="literal">false</span>,</span><br><span class="line">         &#125;,</span><br><span class="line">         axisLine: &#123;</span><br><span class="line">           show: <span class="literal">false</span>,</span><br><span class="line">         &#125;,</span><br><span class="line">       &#125;,</span><br><span class="line">       grid: &#123;</span><br><span class="line">         top: <span class="number">0</span>,</span><br><span class="line">         left: -<span class="number">9</span>,</span><br><span class="line">         right: <span class="number">0</span>,</span><br><span class="line">         bottom: <span class="number">0</span>,</span><br><span class="line">         containLabel: <span class="literal">true</span>,</span><br><span class="line">       &#125;,</span><br><span class="line">       yAxis: [</span><br><span class="line">         &#123;</span><br><span class="line">           show: <span class="literal">false</span>,</span><br><span class="line">           axisLine: &#123;</span><br><span class="line">             show: <span class="literal">false</span>,</span><br><span class="line">           &#125;,</span><br><span class="line">           axisTick: &#123;</span><br><span class="line">             show: <span class="literal">false</span>,</span><br><span class="line">           &#125;,</span><br><span class="line">           data: [<span class="string">&quot;&quot;</span>],</span><br><span class="line">         &#125;,</span><br><span class="line">       ],</span><br><span class="line">       series: [</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="comment">//内</span></span><br><span class="line">           type: <span class="string">&quot;bar&quot;</span>,</span><br><span class="line">           barWidth: <span class="number">18</span>,</span><br><span class="line">           legendHoverLink: <span class="literal">false</span>,</span><br><span class="line">           symbolRepeat: <span class="literal">true</span>,</span><br><span class="line">           silent: <span class="literal">true</span>,</span><br><span class="line">           itemStyle: &#123;</span><br><span class="line">             color: &#123;</span><br><span class="line">               type: <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">               x: <span class="number">0</span>,</span><br><span class="line">               y: <span class="number">0</span>,</span><br><span class="line">               x2: <span class="number">1</span>,</span><br><span class="line">               y2: <span class="number">0</span>,</span><br><span class="line">               colorStops: [</span><br><span class="line">                 &#123;</span><br><span class="line">                   offset: <span class="number">0</span>,</span><br><span class="line">                   color: <span class="string">&quot;#B6D9F9&quot;</span>, <span class="comment">// 0% 处的颜色</span></span><br><span class="line">                 &#125;,</span><br><span class="line">                 &#123;</span><br><span class="line">                   offset: <span class="number">1</span>,</span><br><span class="line">                   color: <span class="string">&quot;#54BCF9&quot;</span>, <span class="comment">// 100% 处的颜色</span></span><br><span class="line">                 &#125;,</span><br><span class="line">               ],</span><br><span class="line">             &#125;,</span><br><span class="line">           &#125;,</span><br><span class="line">           data: [progressData],</span><br><span class="line">           z: <span class="number">1</span>,</span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="comment">//分隔</span></span><br><span class="line">           type: <span class="string">&quot;pictorialBar&quot;</span>,</span><br><span class="line">           itemStyle: &#123;</span><br><span class="line">             color: <span class="string">&quot;#1d2f4f&quot;</span>,</span><br><span class="line">           &#125;,</span><br><span class="line">           symbolRepeat: <span class="string">&quot;fixed&quot;</span>,</span><br><span class="line">           symbolMargin: <span class="number">2</span>,</span><br><span class="line">           symbol: <span class="string">&quot;roundRect&quot;</span>,</span><br><span class="line">           symbolClip: <span class="literal">true</span>,</span><br><span class="line">           symbolSize: [<span class="number">2</span>, <span class="number">18</span>],</span><br><span class="line">           symbolPosition: <span class="string">&quot;start&quot;</span>,</span><br><span class="line">           symbolOffset: [<span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">           data: [<span class="number">100</span>],</span><br><span class="line">           z: <span class="number">2</span>,</span><br><span class="line">           animationEasing: <span class="string">&quot;elasticOut&quot;</span>,</span><br><span class="line">         &#125;,</span><br><span class="line">       ],</span><br><span class="line">     &#125;;</span><br><span class="line"></span><br><span class="line">     myChart.setOption(option);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// echarts图随着窗口的大小变化而变化</span></span><br><span class="line">   <span class="built_in">window</span>.addEventListener(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">     <span class="keyword">if</span> (myChart) myChart.resize();</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"> state = &#123;&#125;;</span><br><span class="line"> <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> (</span><br><span class="line">     &lt;div className=<span class="string">&quot;cutProgressChart&quot;</span> style=&#123;<span class="built_in">this</span>.props.styles&#125;&gt;</span><br><span class="line">       &#123;<span class="built_in">this</span>.props.show ? (</span><br><span class="line">         &lt;div className=<span class="string">&quot;chart-wrap&quot;</span>&gt;</span><br><span class="line">           &lt;div</span><br><span class="line">             ref=&#123;<span class="built_in">this</span>.props.bindRefs&#125;</span><br><span class="line">             style=&#123;&#123; <span class="attr">width</span>: <span class="string">&quot;100%&quot;</span>, <span class="attr">height</span>: <span class="string">&quot;100%&quot;</span> &#125;&#125;</span><br><span class="line">           &gt;&lt;/div&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">       ) : (</span><br><span class="line">         &lt;div className=<span class="string">&quot;no-data&quot;</span>&gt;</span><br><span class="line">           &lt;a&gt;暂无数据&lt;/a&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">       )&#125;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">   );</span><br><span class="line"> &#125;</span><br><span class="line">&gt;&#125;</span><br><span class="line"></span><br><span class="line">&gt;<span class="keyword">export</span> <span class="keyword">default</span> CutProgressChart;</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h4 id="12月16日"><a href="#12月16日" class="headerlink" title="12月16日"></a>12月16日</h4><blockquote><p>问题描述：element 表格自定义提示框会和表格本身固定列冲突导致表格固定列错位</p></blockquote><h2 id="2020-1"><a href="#2020-1" class="headerlink" title="2020"></a>2020</h2><h4 id="03月25日"><a href="#03月25日" class="headerlink" title="03月25日"></a>03月25日</h4><blockquote><p>问题描述：<a href="https://blog.csdn.net/luanxiyuan/article/details/103337616">使用 scss 换肤</a></p><p>解决办法：</p><ol><li><p>通过改变 body[data-theme=’variable’]，实现一键切换主题，variable就是主题的名称，比如  body[data-theme=’yuexiu-orange’]。 </p></li><li><p>新建一个theme.scss文件存放主题变量</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这里我们有三种主题</span></span><br><span class="line"><span class="variable">$themes</span>:(</span><br><span class="line">  yuexiu-orange:(</span><br><span class="line">    menuText:<span class="number">#fff</span>,</span><br><span class="line">    menuActiveText:<span class="number">#409EFF</span>,</span><br><span class="line">    subMenuActiveText:<span class="number">#f4f4f5</span>, // https://github.com/ElemeFE/element/issues/<span class="number">12951</span></span><br><span class="line">    menuBg:<span class="number">#FA8D19</span>,</span><br><span class="line">    menuHover:<span class="number">#FA8D19</span>,</span><br><span class="line">    subMenuBg:<span class="number">#fa7e19</span>,</span><br><span class="line">    subMenuHover:<span class="number">#fa7e19</span>,</span><br><span class="line">    tagViewBgActive:<span class="number">#fa7e19a8</span>,</span><br><span class="line">  ),</span><br><span class="line">  </span><br><span class="line">  business-black:(</span><br><span class="line">    menuText:<span class="number">#bfcbd9</span>,</span><br><span class="line">    menuActiveText:<span class="number">#409EFF</span>,</span><br><span class="line">    subMenuActiveText:<span class="number">#f4f4f5</span>, // https://github.com/ElemeFE/element/issues/<span class="number">12951</span></span><br><span class="line">    menuBg:<span class="number">#2B2E35</span>,</span><br><span class="line">    menuHover:<span class="number">#001528</span>,</span><br><span class="line">    subMenuBg:<span class="number">#151618</span>,</span><br><span class="line">    subMenuHover:<span class="number">#001528</span>,</span><br><span class="line">    tagViewBgActive:<span class="number">#4D565F</span>,</span><br><span class="line">  ),</span><br><span class="line">  </span><br><span class="line">  sat-blue:()</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>新建一个处理变量的scss处理文件</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入变量</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;./theme.scss&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> themeify &#123;</span><br><span class="line">  <span class="keyword">@each</span> <span class="variable">$theme-name</span>, <span class="variable">$theme-map</span> in <span class="variable">$themes</span> &#123;</span><br><span class="line">    <span class="variable">$theme-map</span>: <span class="variable">$theme-map</span> !global;</span><br><span class="line">    <span class="selector-tag">body</span><span class="selector-attr">[data-theme=#&#123;$theme-name&#125;]</span> &amp; &#123;</span><br><span class="line">      <span class="keyword">@content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">@function</span> themed(<span class="variable">$key</span>) &#123;</span><br><span class="line">  <span class="keyword">@return</span> map-get(<span class="variable">$theme-map</span>, <span class="variable">$key</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>使用：</p><ol><li><p>手动引入使用：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;~@assets/theme/_themeify.scss&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.app-home</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="keyword">@include</span> themeify &#123;</span><br><span class="line">    <span class="attribute">color</span>: themed(<span class="string">&#x27;text-color-primary&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><pre><code> 2. 建议：使用 [sass-resources-loader](https://www.npmjs.com/package/sass-resources-loader) 全局引入（使用该方法后你可以不再每个地方手动引入，更加快捷方便高效）    <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue.config.js中配置</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  chainWebpack: <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> oneOfsMap = config.module.rule(<span class="string">&#x27;scss&#x27;</span>).oneOfs.store;</span><br><span class="line">    oneOfsMap.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      item</span><br><span class="line">        .use(<span class="string">&#x27;sass-resources-loader&#x27;</span>)</span><br><span class="line">        .loader(<span class="string">&#x27;sass-resources-loader&#x27;</span>)</span><br><span class="line">        .options(&#123;</span><br><span class="line">          <span class="comment">// 也可以选择全局变量路径数组, 如果你有多个文件需要成为全局,就可以采用这种方法</span></span><br><span class="line">          resources: [path.resolve(__dirname, <span class="string">&#x27;src/styles/theme/handler_theme.scss&#x27;</span>)]</span><br><span class="line">        &#125;)</span><br><span class="line">        .end()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></code></pre><ol start="5"><li>最后就回到了第一步，给根节点 body 加上 data-theme 属性 body[data-theme=’yuexiu-orange’]，data-theme 这个名字可以自己取，要切换属性不用我多说了吧 document.setAttribute(‘data-theme’, 你的主题名字)</li></ol></blockquote><h4 id="04月13日"><a href="#04月13日" class="headerlink" title="04月13日"></a>04月13日</h4><blockquote><p>问题描述：vue dom渲染树状（嵌套）数组数据</p><p>解决办法：</p><ol><li>定义一个组件循环这个数组的最外层</li><li>在将这个组件在自己的内部使用一次循环第二层达到递归效果，注意自己的组件名字和name要一模一样</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&gt;&lt;template&gt;</span><br><span class="line">&lt;div v-for&#x3D;&quot;(item,index) in list&quot; :key&#x3D;&quot;String(index)&quot;&gt;</span><br><span class="line">       &lt;!--自己内部调用一次--&gt;</span><br><span class="line">       &lt;nest&#x2F;&gt; </span><br><span class="line">   &lt;&#x2F;div&gt;</span><br><span class="line">&gt;&lt;&#x2F;template&gt;</span><br><span class="line">&gt;&lt;script&gt;</span><br><span class="line">   export default &#123;</span><br><span class="line">       name:&#39;nest&#39;</span><br><span class="line">       data()&#123;</span><br><span class="line">           return &#123;</span><br><span class="line">               list:[</span><br><span class="line">                   &#123;</span><br><span class="line">                       label:&quot;第一层&quot;,</span><br><span class="line">                       children:[</span><br><span class="line">                           &#123;</span><br><span class="line">                               label:&#39;第二层&#39;,</span><br><span class="line">                               children:[</span><br><span class="line">                                   &#123;</span><br><span class="line">                                       label:&#39;第三层&#39;</span><br><span class="line">                                   &#125;</span><br><span class="line">                               ]</span><br><span class="line">                           &#125;</span><br><span class="line">                       ]</span><br><span class="line">                   &#125;</span><br><span class="line">               ]    </span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="04月21日"><a href="#04月21日" class="headerlink" title="04月21日"></a>04月21日</h4><blockquote><p>问题描述：门户master-v2,0分支代码在ie浏览器空白问题</p><p>问题起因：</p><ol><li>swiper@8版本过高，换成了 swiper@3 和vue-awesome-swiper@3 代替其使用</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="keyword">import</span> <span class="string">&#x27;swiper/dist/css/swiper.css&#x27;</span>;</span><br><span class="line">&gt;<span class="keyword">import</span> &#123; swiper, swiperSlide &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-awesome-swiper&#x27;</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>@antv-x6需要做配置操作来兼容IE浏览器,配置如下：</p></li><li><p>该选项默认值是 <code>[]</code>，说明会忽略掉所有掉 node<em>modules 文件，不会对 node</em>modules 里面对文件做 Babel。我们需要做的就是把我们希望 Babel 的文件加入即可，代码如下。需要注意的是我们加入的依赖<strong>不需要包含 node_modules ，用包名 @antv/g6</strong>即可，因为 @vue/cli 会自动添加前缀 node<em>modules 。还需要注意  @antv/g6 必须和 package.json 里面的一致。安装依赖的时候首选 npm ，如果你用 yarn、cnpm 等安装，需要确保 node</em>modules 里面的包名没有被更改。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  transpileDependencies: [<span class="string">&#x27;@antv/g6&#x27;</span>],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>​    2.最开始的那个报错解决了，但出现了新问题。先用 Chrome 浏览器看看，发现问题是一样的。添加完 <code>transpileDependencies</code> 兼容性问题是没有了，但出了个新错误。再次查看官网，并没有相关文章，那就直接移步 issue 吧。经过一番查找，我们找到如下解决方案，在 babel.config.js 里面添加上 <code>sourceType: &quot;unambiguous&quot;</code> ，具体含义可以官网查阅。</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="built_in">module</span>.exports = &#123;</span><br><span class="line"> sourceType: <span class="string">&#x27;unambiguous&#x27;</span>,</span><br><span class="line"> presets: [<span class="string">&#x27;@vue/cli-plugin-babel/preset&#x27;</span>],</span><br><span class="line">&gt;&#125;;</span><br></pre></td></tr></table></figure></blockquote><h4 id="06月16日"><a href="#06月16日" class="headerlink" title="06月16日"></a>06月16日</h4><blockquote><p>问题描述：node-sass在 node-v16版本 报错兼容性差（将node-sass换成dart-sass）</p><p>问题起因：因为sass官方在nide-v14版本以后使用dart-sass代替了node-sass,node-sass要依靠电脑底层C++语言进行编译，兼容性较差，sass官方便使用了dart-sass以虚拟的sass形式最后编译成css文件，这样不仅兼容性好且性能高</p><p>解决办法：</p><ol><li><p>将nodejs版本换到16以上</p></li><li><p>卸载node-sass sass-loader sass  (npm uninstall node-sass sass-loader sass)</p></li><li><p>再安装新的 sass-loader sass (npm install sass-loader sass -D)</p></li><li><p>更新vue.config.js文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      sass: &#123;</span><br><span class="line">        implementation: <span class="built_in">require</span>(<span class="string">&#x27;sass&#x27;</span>), <span class="comment">// This line must in sass option</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>重启项目，如果node-gyp报错就全局安装更新 (npm install  node-gyp -g)</p></li><li><p>如果报Rule can only have one resource source (provided resource and test + include + exclude) in，就安装 (npm install webpack@^4.0.0 –save-dev)</p></li><li><p>如果 vue.config中的 sass prependData报错</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">   </span><br></pre></td></tr></table></figure><p>就修改</p><p>原来的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      sass: &#123;</span><br><span class="line">        prependData: <span class="string">&#x27;@import &quot;@/scss/settings.scss&quot;;&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>修改后的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      sass: &#123;</span><br><span class="line">        additionalData: <span class="string">&#x27;@import &quot;@/scss/settings.scss&quot;;&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>如果 sass /deep/ 报错 就把 /deep/ 换成 ::v-deep</p></li><li><p>不出意外就可以正常运行了</p></li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2020&quot;&gt;&lt;a href=&quot;#2020&quot; class=&quot;headerlink&quot; title=&quot;2020&quot;&gt;&lt;/a&gt;2020&lt;/h2&gt;&lt;h3 id=&quot;东鹏portal&quot;&gt;&lt;a href=&quot;#东鹏portal&quot; class=&quot;headerlink&quot; title=&quot;东</summary>
      
    
    
    
    
    <category term="智扬信达" scheme="https://xulujin.gitee.io/blog/tags/%E6%99%BA%E6%89%AC%E4%BF%A1%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>深度优先遍历和广度优先遍历</title>
    <link href="https://xulujin.gitee.io/blog/2020/07/17/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86%E5%92%8C%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/"/>
    <id>https://xulujin.gitee.io/blog/2020/07/17/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86%E5%92%8C%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/</id>
    <published>2020-07-17T06:31:29.000Z</published>
    <updated>2020-07-28T02:55:57.240Z</updated>
    
    <content type="html"><![CDATA[<h1 id="深度优先遍历和广度优先遍历"><a href="#深度优先遍历和广度优先遍历" class="headerlink" title="深度优先遍历和广度优先遍历"></a>深度优先遍历和广度优先遍历</h1><p>第五题问的是深度优先遍历和广度优先遍历，我是从dom节点的遍历来理解这个问题的</p><h4 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h4><p><a href="https://user-images.githubusercontent.com/27856388/52606290-118a3180-2ead-11e9-86b7-d0feae6f8030.png"><img src="https://user-images.githubusercontent.com/27856388/52606290-118a3180-2ead-11e9-86b7-d0feae6f8030.png" alt="image"></a></p><p>我将用深度优先遍历和广度优先遍历对这个dom树进行查找</p><h3 id="深度优先遍历"><a href="#深度优先遍历" class="headerlink" title="深度优先遍历"></a>深度优先遍历</h3><hr><p>深度优先遍历DFS 与树的先序遍历比较类似。<br>假设初始状态是图中所有顶点均未被访问，则从某个顶点v出发，首先访问该顶点然后依次从它的各个未被访问的邻接点出发深度优先搜索遍历图，直至图中所有和v有路径相通的顶点都被访问到。若此时尚有其他顶点未被访问到，则另选一个未被访问的顶点作起始点，重复上述过程，直至图中所有顶点都被访问到为止。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*深度优先遍历三种方式*/</span></span><br><span class="line"><span class="keyword">let</span> deepTraversal1 = <span class="function">(<span class="params">node, nodeList = []</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (node !== <span class="literal">null</span>) &#123;</span><br><span class="line">    nodeList.push(node)</span><br><span class="line">    <span class="keyword">let</span> children = node.children</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; children.length; i++) &#123;</span><br><span class="line">      deepTraversal1(children[i], nodeList)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> nodeList</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> deepTraversal2 = <span class="function">(<span class="params">node</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> nodes = []</span><br><span class="line">    <span class="keyword">if</span> (node !== <span class="literal">null</span>) &#123;</span><br><span class="line">      nodes.push(node)</span><br><span class="line">      <span class="keyword">let</span> children = node.children</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; children.length; i++) &#123;</span><br><span class="line">        nodes = nodes.concat(deepTraversal2(children[i]))</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nodes</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 非递归</span></span><br><span class="line"><span class="keyword">let</span> deepTraversal3 = <span class="function">(<span class="params">node</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> stack = []</span><br><span class="line">  <span class="keyword">let</span> nodes = []</span><br><span class="line">  <span class="keyword">if</span> (node) &#123;</span><br><span class="line">    <span class="comment">// 推入当前处理的node</span></span><br><span class="line">    stack.push(node)</span><br><span class="line">    <span class="keyword">while</span> (stack.length) &#123;</span><br><span class="line">      <span class="keyword">let</span> item = stack.pop()</span><br><span class="line">      <span class="keyword">let</span> children = item.children</span><br><span class="line">      nodes.push(item)</span><br><span class="line">      <span class="comment">// node = [] stack = [parent]</span></span><br><span class="line">      <span class="comment">// node = [parent] stack = [child3,child2,child1]</span></span><br><span class="line">      <span class="comment">// node = [parent, child1] stack = [child3,child2,child1-2,child1-1]</span></span><br><span class="line">      <span class="comment">// node = [parent, child1-1] stack = [child3,child2,child1-2]</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = children.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        stack.push(children[i])</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> nodes</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h5><p><a href="https://user-images.githubusercontent.com/27856388/52606984-88282e80-2eaf-11e9-8640-5220d1d2dc74.png"><img src="https://user-images.githubusercontent.com/27856388/52606984-88282e80-2eaf-11e9-8640-5220d1d2dc74.png" alt="image"></a></p><h3 id="广度优先遍历"><a href="#广度优先遍历" class="headerlink" title="广度优先遍历"></a>广度优先遍历</h3><hr><p>广度优先遍历 BFS<br>从图中某顶点v出发，在访问了v之后依次访问v的各个未曾访问过的邻接点，然后分别从这些邻接点出发依次访问它们的邻接点，并使得“先被访问的顶点的邻接点先于后被访问的顶点的邻接点被访问，直至图中所有已被访问的顶点的邻接点都被访问到。 如果此时图中尚有顶点未被访问，则需要另选一个未曾被访问过的顶点作为新的起始点，重复上述过程，直至图中所有顶点都被访问到为止。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> widthTraversal2 = <span class="function">(<span class="params">node</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> nodes = []</span><br><span class="line">  <span class="keyword">let</span> stack = []</span><br><span class="line">  <span class="keyword">if</span> (node) &#123;</span><br><span class="line">    stack.push(node)</span><br><span class="line">    <span class="keyword">while</span> (stack.length) &#123;</span><br><span class="line">      <span class="keyword">let</span> item = stack.shift()</span><br><span class="line">      <span class="keyword">let</span> children = item.children</span><br><span class="line">      nodes.push(item)</span><br><span class="line">        <span class="comment">// 队列，先进先出</span></span><br><span class="line">        <span class="comment">// nodes = [] stack = [parent]</span></span><br><span class="line">        <span class="comment">// nodes = [parent] stack = [child1,child2,child3]</span></span><br><span class="line">        <span class="comment">// nodes = [parent, child1] stack = [child2,child3,child1-1,child1-2]</span></span><br><span class="line">        <span class="comment">// nodes = [parent,child1,child2]</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; children.length; i++) &#123;</span><br><span class="line">        stack.push(children[i])</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> nodes</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="输出结果-1"><a href="#输出结果-1" class="headerlink" title="输出结果"></a>输出结果</h5><p><a href="https://user-images.githubusercontent.com/27856388/52607770-63818600-2eb2-11e9-9f5e-fc3e87950cd2.png"><img src="https://user-images.githubusercontent.com/27856388/52607770-63818600-2eb2-11e9-9f5e-fc3e87950cd2.png" alt="image"></a></p><h4 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h4><p>仅个人理解，如果有错欢迎大家指出批评，一起进步</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;深度优先遍历和广度优先遍历&quot;&gt;&lt;a href=&quot;#深度优先遍历和广度优先遍历&quot; class=&quot;headerlink&quot; title=&quot;深度优先遍历和广度优先遍历&quot;&gt;&lt;/a&gt;深度优先遍历和广度优先遍历&lt;/h1&gt;&lt;p&gt;第五题问的是深度优先遍历和广度优先遍历，我是从dom</summary>
      
    
    
    
    
    <category term="面试题" scheme="https://xulujin.gitee.io/blog/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
</feed>
